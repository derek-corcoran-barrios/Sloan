{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Spatial\"\nauthor: \"Derek Corcoran\"\ndate: \"September 1, 2016\"\noutput: pdf_document\n---\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\nlibrary(rjson)\nlibrary(grid)\nlibrary(gridExtra)\nlibrary(png)\nlibrary(RCurl)\nlibrary(ggplot2)\nlibrary(jpeg)\nlibrary(hexbin)\nlibrary(sp)\nlibrary(knitr)\nlibrary(raster)\nlibrary(rasterVis)\nlibrary(dplyr)\n```\n\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\n\nby_team <- read.csv(\"~/Sloan/by_team.csv\")\nby_team <- by_team[-1,-1]\nView(by_team)\n```\n\n#2015\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\n# shot data for Stephen Curry\nteamID <- by_team$team_id\nteamName <- by_team$team_city\ndefensiveURL <- list()\nshotData <- list()\nshotDatafDef <- list()\n\n\nfor (i in 1:length(teamID)){\ndefensiveURL[[i]] <- paste(\"http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2014-15&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=\", by_team$team_id[i],\"&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2014-15&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0\", sep = \"\")\n\n# import from JSON\nshotData[[i]] <- fromJSON(file = defensiveURL[[i]], method=\"C\")\n\n# unlist shot data, save into a data frame\nshotDatafDef[[i]] <- data.frame(matrix(unlist(shotData[[i]]$resultSets[[1]][[3]]), ncol=21, byrow = TRUE))\n\n# shot data headers\ncolnames(shotDatafDef[[i]]) <- shotData[[i]]$resultSets[[1]][[2]]\n\n# covert x and y coordinates into numeric\nshotDatafDef[[i]]$LOC_X <- as.numeric(as.character(shotDatafDef[[i]]$LOC_X))\nshotDatafDef[[i]]$LOC_Y <- as.numeric(as.character(shotDatafDef[[i]]$LOC_Y))\nshotDatafDef[[i]]$SHOT_DISTANCE <- as.numeric(as.character(shotDatafDef[[i]]$SHOT_DISTANCE))\n}\n\nnames(shotDatafDef) <- teamName\n# have a look at the data\n```\n\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\nshotURLtotal <- paste(\"http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2014-15&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2014-15&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0\", sep = \"\")\n\n# import from JSON\nshotDataTotal <- fromJSON(file = shotURLtotal, method=\"C\")\n\n# unlist shot data, save into a data frame\nshotDataTotal <- data.frame(matrix(unlist(shotDataTotal$resultSets[[1]][[3]]), ncol=21, byrow = TRUE))\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE}\ncolnames(shotDataTotal) <- colnames(shotDatafDef[[1]])\n\n# covert x and y coordinates into numeric\nshotDataTotal$LOC_X <- as.numeric(as.character(shotDataTotal$LOC_X))\nshotDataTotal$LOC_Y <- as.numeric(as.character(shotDataTotal$LOC_Y))\nshotDataTotal$SHOT_DISTANCE <- as.numeric(as.character(shotDataTotal$SHOT_DISTANCE))\n\n\nshotDataTotal2015 <- shotDataTotal\n\nshotDatafDef2015 <- shotDatafDef\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE}\ncolnames(shotDataTotal) <- colnames(shotDatafDef[[1]])\n\n# covert x and y coordinates into numeric\nshotDataTotal$LOC_X <- as.numeric(as.character(shotDataTotal$LOC_X))\nshotDataTotal$LOC_Y <- as.numeric(as.character(shotDataTotal$LOC_Y))\nshotDataTotal$SHOT_DISTANCE <- as.numeric(as.character(shotDataTotal$SHOT_DISTANCE))\n\n\nshotDataTotal2015 <- shotDataTotal\n\nshotDatafDef2015 <- shotDatafDef\n```\n\n#2016\n\n\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\ndefensiveURL <- list()\nshotData <- list()\nshotDatafDef <- list()\n\n\nfor (i in 1:length(teamID)){\ndefensiveURL[[i]] <- paste(\"http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2015-16&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=\", by_team$team_id[i],\"&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2015-16&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0\", sep = \"\")\n\n# import from JSON\nshotData[[i]] <- fromJSON(file = defensiveURL[[i]], method=\"C\")\n\n# unlist shot data, save into a data frame\nshotDatafDef[[i]] <- data.frame(matrix(unlist(shotData[[i]]$resultSets[[1]][[3]]), ncol=21, byrow = TRUE))\n\n# shot data headers\ncolnames(shotDatafDef[[i]]) <- shotData[[i]]$resultSets[[1]][[2]]\n\n# covert x and y coordinates into numeric\nshotDatafDef[[i]]$LOC_X <- as.numeric(as.character(shotDatafDef[[i]]$LOC_X))\nshotDatafDef[[i]]$LOC_Y <- as.numeric(as.character(shotDatafDef[[i]]$LOC_Y))\nshotDatafDef[[i]]$SHOT_DISTANCE <- as.numeric(as.character(shotDatafDef[[i]]$SHOT_DISTANCE))\n}\n\nnames(shotDatafDef) <- teamName\n# have a look at the data\nshotDatafDef2016 <- shotDatafDef\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\nshotURLtotal <- paste(\"http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2015-16&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2015-16&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0\", sep = \"\")\n\n# import from JSON\nshotDataTotal <- fromJSON(file = shotURLtotal, method=\"C\")\n\n# unlist shot data, save into a data frame\nshotDataTotal <- data.frame(matrix(unlist(shotDataTotal$resultSets[[1]][[3]]), ncol=21, byrow = TRUE))\ncolnames(shotDataTotal) <- colnames(shotDatafDef[[1]])\n\n# covert x and y coordinates into numeric\nshotDataTotal$LOC_X <- as.numeric(as.character(shotDataTotal$LOC_X))\nshotDataTotal$LOC_Y <- as.numeric(as.character(shotDataTotal$LOC_Y))\nshotDataTotal$SHOT_DISTANCE <- as.numeric(as.character(shotDataTotal$SHOT_DISTANCE))\n\n\nshotDataTotal2016 <- shotDataTotal\n\n```\n\n\n#2014\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\ndefensiveURL <- list()\nshotData <- list()\nshotDatafDef <- list()\n\n\nfor (i in 1:length(teamID)){\ndefensiveURL[[i]] <- paste(\"http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2013-14&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=\", by_team$team_id[i],\"&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2013-14&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0\", sep = \"\")\n\n# import from JSON\nshotData[[i]] <- fromJSON(file = defensiveURL[[i]], method=\"C\")\n\n# unlist shot data, save into a data frame\nshotDatafDef[[i]] <- data.frame(matrix(unlist(shotData[[i]]$resultSets[[1]][[3]]), ncol=21, byrow = TRUE))\n\n# shot data headers\ncolnames(shotDatafDef[[i]]) <- shotData[[i]]$resultSets[[1]][[2]]\n\n# covert x and y coordinates into numeric\nshotDatafDef[[i]]$LOC_X <- as.numeric(as.character(shotDatafDef[[i]]$LOC_X))\nshotDatafDef[[i]]$LOC_Y <- as.numeric(as.character(shotDatafDef[[i]]$LOC_Y))\nshotDatafDef[[i]]$SHOT_DISTANCE <- as.numeric(as.character(shotDatafDef[[i]]$SHOT_DISTANCE))\n}\n\nnames(shotDatafDef) <- teamName\n# have a look at the data\nshotDatafDef2014 <- shotDatafDef\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\nshotURLtotal <- paste(\"http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2013-14&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2013-14&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0\", sep = \"\")\n\n# import from JSON\nshotDataTotal <- fromJSON(file = shotURLtotal, method=\"C\")\n\n# unlist shot data, save into a data frame\nshotDataTotal <- data.frame(matrix(unlist(shotDataTotal$resultSets[[1]][[3]]), ncol=21, byrow = TRUE))\ncolnames(shotDataTotal) <- colnames(shotDatafDef[[1]])\n\n# covert x and y coordinates into numeric\nshotDataTotal$LOC_X <- as.numeric(as.character(shotDataTotal$LOC_X))\nshotDataTotal$LOC_Y <- as.numeric(as.character(shotDataTotal$LOC_Y))\nshotDataTotal$SHOT_DISTANCE <- as.numeric(as.character(shotDataTotal$SHOT_DISTANCE))\n\n\nshotDataTotal2014 <- shotDataTotal\n\n```\n\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE,}\n\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, cache=TRUE, results='hide'}\n\ncourt <-  readRDS(\"court.rds\")\n```\n\n```{r, cache = TRUE}\n\n\nShotComparison <- function(OffTeam, DefTown, SeasondataOff, SeasonDataDef, nbins = 40) {\n  #Filter the offensive data of the Offensive Team\n  Off <- filter(SeasondataOff, TEAM_NAME == OffTeam)\n  #Filter the Deffensive data of the Defensive team\n  deff <- SeasonDataDef[names(SeasonDataDef) == DefTown][[1]]\n  #Get the maximum and minumum values for x and y\n  xbnds <- range(c(SeasondataOff$LOC_X, deff$LOC_X))\n  ybnds <- range(c(SeasondataOff$LOC_Y, deff$LOC_Y))\n  #Make hexbin dataframes out of the teams\n  makeHexData <- function(df) {\n    h <- hexbin(df$LOC_X, df$LOC_Y, nbins, xbnds = xbnds, ybnds = ybnds, IDs = TRUE)\n    data.frame(hcell2xy(h),\n               PPS = tapply(as.numeric(as.character(df$SHOT_MADE_FLAG))*ifelse(tolower(df$SHOT_TYPE) == \"3pt field goal\", 3, 2), h@cID, FUN = function(z) sum(z)/length(z)),\n               ST = tapply(df$SHOT_MADE_FLAG, h@cID, FUN = function(z) length(z)),\n               cid = h@cell)\n  }\n  ##Total NBA data\n  Totalhex <- makeHexData(SeasondataOff)\n  ##Defensive team data\n  Defhex <- makeHexData(deff)\n  ##Offensive team data\n  Offhex <- makeHexData(Off)\n  #Merge offensive and deffensive data with total data by Cell id\n  DeffbyCell <- merge(Totalhex, Defhex, by = \"cid\", all = T)\n  OffByCell <- merge(Totalhex, Offhex, by = \"cid\", all = T)\n  ##  when calculating the difference empty cells should count as 0\n  DeffbyCell$PPS.x[is.na(DeffbyCell$PPS.x)] <- 0\n  DeffbyCell$PPS.y[is.na(DeffbyCell$PPS.y)] <- 0\n  DeffbyCell$ST.y[is.na(DeffbyCell$ST.y)] <- 0\n\n  OffByCell$PPS.x[is.na(OffByCell$PPS.x)] <- 0\n  OffByCell$PPS.y[is.na(OffByCell$PPS.y)] <- 0\n  OffByCell$ST.y[is.na(OffByCell$ST.y)] <- 0\n  #  make a \"difference\" data.frame\n  DiffDeff <- data.frame(x = ifelse(is.na(DeffbyCell$x.x), DeffbyCell$x.y, DeffbyCell$x.x),\n                        y = ifelse(is.na(DeffbyCell$y.x), DeffbyCell$y.y, DeffbyCell$y.x),\n                        PPS= DeffbyCell$PPS.y - DeffbyCell$PPS.x,\n                        cid= DeffbyCell$cid, \n                        ST = DeffbyCell$ST.y)\n  \n  DiffOff <- data.frame(x = ifelse(is.na(OffByCell$x.x), OffByCell$x.y, OffByCell$x.x),\n                        y = ifelse(is.na(OffByCell$y.x), OffByCell$y.y, OffByCell$y.x),\n                        PPS= OffByCell$PPS.y - OffByCell$PPS.x,\n                        ST = OffByCell$ST.x,\n                        cid = OffByCell$cid, \n                        ST = OffByCell$ST.y)\n  #make team comparisons\n  Comparison <- merge(DiffOff, DiffDeff, by = \"cid\", all = T) \n  Comparison <- Comparison[,-c(6:7)]\n  Comparison$Diff <- c(Comparison$PPS.x + Comparison$PPS.y)\n  \n  \n  PPSAA <- weighted.mean((Comparison$PPS.x + Comparison$PPS.y), Comparison$ST.x)\n  \n  OFF <- ggplot(DiffOff)  + \n    annotation_custom(court, -250, 250, -52, 418) +\n    geom_hex(aes(x = x, y = y, fill = PPS),\n             stat = \"identity\", alpha = 0.8) +\n    guides(alpha = FALSE, size = FALSE) +\n    coord_fixed()  +theme(line = element_blank(),\n                          axis.title.x = element_blank(),\n                          axis.title.y = element_blank(),\n                          axis.text.x = element_blank(),\n                          axis.text.y = element_blank(),\n                          legend.title = element_blank(),\n                          plot.title = element_text(size = 17, lineheight = 1.2, face = \"bold\")) + ggtitle(paste(OffTeam, \"Offensive\\n Shot Chart\", sep = \" \")) + scale_fill_gradient2(name=\"Off PPS\")\n  DEF <- ggplot(DiffDeff)  + \n    annotation_custom(court, -250, 250, -52, 418) +\n    geom_hex(aes(x = x, y = y, fill = PPS),\n             stat = \"identity\", alpha = 0.8) +\n    guides(alpha = FALSE, size = FALSE) +\n    \n    coord_fixed()  +theme(line = element_blank(),\n                          axis.title.x = element_blank(),\n                          axis.title.y = element_blank(),\n                          axis.text.x = element_blank(),\n                          axis.text.y = element_blank(),\n                          legend.title = element_blank(),\n                          plot.title = element_text(size = 17, lineheight = 1.2, face = \"bold\")) + ggtitle(paste(DefTown, \"defensive\\n Shot Chart\", sep = \" \")) + scale_fill_gradient2(name=\"Def PPS\")\n  \n  COMP <- ggplot(Comparison)  + \n    annotation_custom(court, -250, 250, -52, 418) +\n    geom_hex(aes(x = x.x, y = y.x, fill = Diff),\n             stat = \"identity\", alpha = 0.8) +\n    guides(alpha = FALSE, size = FALSE) +\n    \n    coord_fixed()  +theme(line = element_blank(),\n                          axis.title.x = element_blank(),\n                          axis.title.y = element_blank(),\n                          axis.text.x = element_blank(),\n                          axis.text.y = element_blank(),\n                          legend.title = element_blank(),\n                          plot.title = element_text(size = 17, lineheight = 1.2, face = \"bold\")) + ggtitle(\"Comparison\\n Shot Chart\") + scale_fill_gradient2(name=\"Difference\\n PPS\")\n\n  grid.arrange(DEF, OFF, COMP, ncol=3)\n  \n  return(list(Off = DiffOff, deff = DiffDeff, Comparison = Comparison, Total = Totalhex, PPSAA = PPSAA))\n}\n\nCom1 <- ShotComparison(OffTeam = \"Cleveland Cavaliers\", DefTown = \"Philadelphia\", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)\n\nCom1$PPSAA\n\nCom2 <- ShotComparison(OffTeam = \"Philadelphia 76ers\", DefTown = \"Cleveland\", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)\n\nCom2$PPSAA\n```\n\n```{r, cache=TRUE}\n\nOffensive_teams <- as.character(unique(shotDataTotal2016$TEAM_NAME))\n\ndefenseve_names <- names(shotDatafDef2016)\ncomparisons <- list()\n\nfor (i in 1:length(Offensive_teams)) {\n  comparisons[i] <- ShotComparison(OffTeam = Offensive_teams[i], DefTown = defenseve_names[1], SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)\n  print(comparisons[[i]]$PPSAA)\n}\n\n\n```",
    "created" : 1472743033597.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2137154667",
    "id" : "EBB90D23",
    "lastKnownWriteTime" : 1474317356,
    "last_content_update" : 1474317356900,
    "path" : "~/Sloan/SloanConference.Rmd",
    "project_path" : "SloanConference.Rmd",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}