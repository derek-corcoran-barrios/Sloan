OffByCell$PPS.y[is.na(OffByCell$PPS.y)] <- 0
OffByCell$ST.y[is.na(OffByCell$ST.y)] <- 0
#  make a "difference" data.frame
DiffDeff <- data.frame(x = ifelse(is.na(DeffbyCell$x.x), DeffbyCell$x.y, DeffbyCell$x.x),
y = ifelse(is.na(DeffbyCell$y.x), DeffbyCell$y.y, DeffbyCell$y.x),
PPS= DeffbyCell$PPS.y - DeffbyCell$PPS.x,
cid= DeffbyCell$cid,
ST = DeffbyCell$ST.y)
DiffOff <- data.frame(x = ifelse(is.na(OffByCell$x.x), OffByCell$x.y, OffByCell$x.x),
y = ifelse(is.na(OffByCell$y.x), OffByCell$y.y, OffByCell$y.x),
PPS= OffByCell$PPS.y - OffByCell$PPS.x,
ST = OffByCell$ST.x,
cid = OffByCell$cid,
ST = OffByCell$ST.y)
#make team comparisons
Comparison <- merge(DiffOff, DiffDeff, by = "cid", all = T)
Comparison <- Comparison[,-c(6:7)]
Comparison$Diff <- c(Comparison$PPS.x + Comparison$PPS.y)
PPSAA <- weighted.mean((Comparison$PPS.x + Comparison$PPS.y), Comparison$ST.x)
OFF <- ggplot(DiffOff)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x, y = y, fill = PPS),
stat = "identity", alpha = 0.8) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle(paste(OffTeam, "Offensive\n Shot Chart", sep = " ")) + scale_fill_gradient2(name="Off PPS")
OFF
return(list(Off = DiffOff, deff = DiffDeff, Comparison = Comparison, Total = Totalhex, PPSAA = PPSAA, PLOT = OFF))
}
ShotComparison(OffTeam = "Golden State Warriors", DefTown = "Cleveland", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
ShotComparison(OffTeam = "Boston Celtics", DefTown = "Cleveland", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
ShotComparison(OffTeam = "Boston Celtics", DefTown = "Philadelphia", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
ShotComparison(OffTeam = "Boston Celtics", DefTown = "Philadelphia", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
ShotComparison(OffTeam = "Boston Celtics", DefTown = "Chicago", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
ShotComparison(OffTeam = "Chicago Bulls", DefTown = "Boston", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
ShotComparison <- function(OffTeam, DefTown, SeasondataOff, SeasonDataDef, nbins = 40) {
#Filter the offensive data of the Offensive Team
Off <- filter(SeasondataOff, TEAM_NAME == OffTeam)
#Filter the Deffensive data of the Defensive team
deff <- SeasonDataDef[names(SeasonDataDef) == DefTown][[1]]
#Get the maximum and minumum values for x and y
xbnds <- range(c(SeasondataOff$LOC_X, deff$LOC_X))
ybnds <- range(c(SeasondataOff$LOC_Y, deff$LOC_Y))
#Make hexbin dataframes out of the teams
##Total NBA data
Totalhex <- makeHexData(SeasondataOff)
##Defensive team data
Defhex <- makeHexData(deff)
##Offensive team data
Offhex <- makeHexData(Off)
#Merge offensive and deffensive data with total data by Cell id
DeffbyCell <- merge(Totalhex, Defhex, by = "cid", all = T)
OffByCell <- merge(Totalhex, Offhex, by = "cid", all = T)
##  when calculating the difference empty cells should count as 0
DeffbyCell$PPS.x[is.na(DeffbyCell$PPS.x)] <- 0
DeffbyCell$PPS.y[is.na(DeffbyCell$PPS.y)] <- 0
DeffbyCell$ST.y[is.na(DeffbyCell$ST.y)] <- 0
OffByCell$PPS.x[is.na(OffByCell$PPS.x)] <- 0
OffByCell$PPS.y[is.na(OffByCell$PPS.y)] <- 0
OffByCell$ST.y[is.na(OffByCell$ST.y)] <- 0
#  make a "difference" data.frame
DiffDeff <- data.frame(x = ifelse(is.na(DeffbyCell$x.x), DeffbyCell$x.y, DeffbyCell$x.x),
y = ifelse(is.na(DeffbyCell$y.x), DeffbyCell$y.y, DeffbyCell$y.x),
PPS= DeffbyCell$PPS.y - DeffbyCell$PPS.x,
cid= DeffbyCell$cid,
ST = DeffbyCell$ST.y)
DiffOff <- data.frame(x = ifelse(is.na(OffByCell$x.x), OffByCell$x.y, OffByCell$x.x),
y = ifelse(is.na(OffByCell$y.x), OffByCell$y.y, OffByCell$y.x),
PPS= OffByCell$PPS.y - OffByCell$PPS.x,
ST = OffByCell$ST.x,
cid = OffByCell$cid,
ST = OffByCell$ST.y)
#make team comparisons
Comparison <- merge(DiffOff, DiffDeff, by = "cid", all = T)
Comparison <- Comparison[,-c(6:7)]
Comparison$Diff <- c(Comparison$PPS.x + Comparison$PPS.y)
PPSAA <- weighted.mean((Comparison$PPS.x + Comparison$PPS.y), Comparison$ST.x)
OFF <- ggplot(DiffOff)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x, y = y, fill = PPS),
stat = "identity", alpha = 0.8) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle(paste(OffTeam, "Offensive\n Shot Chart", sep = "\n ")) + scale_fill_gradient2(name="Off PPS")
DEF <- ggplot(DiffDeff)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x, y = y, fill = PPS),
stat = "identity", alpha = 0.8) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle(paste(DefTown, "defensive\n Shot Chart", sep = "\n ")) + scale_fill_gradient2(name="Def PPS")
COMP <- ggplot(Comparison)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x.x, y = y.x, fill = Diff),
stat = "identity", alpha = 0.8) +
scale_fill_gradientn (colours = c("blue","red")) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle("Comparison\n Shot Chart") + scale_fill_gradient2(name="Difference\n PPS")
grid.arrange(DEF, OFF, COMP, ncol=3)
return(list(Off = DiffOff, deff = DiffDeff, Comparison = Comparison, Total = Totalhex, PPSAA = PPSAA))
}
ShotComparison(OffTeam = "Chicago Bulls", DefTown = "Boston", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
ShotComparison(OffTeam = "Golden State Warriors", DefTown = "Philadelphia", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
Com <- ShotComparison(OffTeam = "Golden State Warriors", DefTown = "Philadelphia", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
ShotComparison <- function(OffTeam, DefTown, SeasondataOff, SeasonDataDef, nbins = 40) {
#Filter the offensive data of the Offensive Team
Off <- filter(SeasondataOff, TEAM_NAME == OffTeam)
#Filter the Deffensive data of the Defensive team
deff <- SeasonDataDef[names(SeasonDataDef) == DefTown][[1]]
#Get the maximum and minumum values for x and y
xbnds <- range(c(SeasondataOff$LOC_X, deff$LOC_X))
ybnds <- range(c(SeasondataOff$LOC_Y, deff$LOC_Y))
#Make hexbin dataframes out of the teams
##Total NBA data
Totalhex <- makeHexData(SeasondataOff)
##Defensive team data
Defhex <- makeHexData(deff)
##Offensive team data
Offhex <- makeHexData(Off)
#Merge offensive and deffensive data with total data by Cell id
DeffbyCell <- merge(Totalhex, Defhex, by = "cid", all = T)
OffByCell <- merge(Totalhex, Offhex, by = "cid", all = T)
##  when calculating the difference empty cells should count as 0
DeffbyCell$PPS.x[is.na(DeffbyCell$PPS.x)] <- 0
DeffbyCell$PPS.y[is.na(DeffbyCell$PPS.y)] <- 0
DeffbyCell$ST.y[is.na(DeffbyCell$ST.y)] <- 0
OffByCell$PPS.x[is.na(OffByCell$PPS.x)] <- 0
OffByCell$PPS.y[is.na(OffByCell$PPS.y)] <- 0
OffByCell$ST.y[is.na(OffByCell$ST.y)] <- 0
#  make a "difference" data.frame
DiffDeff <- data.frame(x = ifelse(is.na(DeffbyCell$x.x), DeffbyCell$x.y, DeffbyCell$x.x),
y = ifelse(is.na(DeffbyCell$y.x), DeffbyCell$y.y, DeffbyCell$y.x),
PPS= DeffbyCell$PPS.y - DeffbyCell$PPS.x,
cid= DeffbyCell$cid,
ST = DeffbyCell$ST.y)
DiffOff <- data.frame(x = ifelse(is.na(OffByCell$x.x), OffByCell$x.y, OffByCell$x.x),
y = ifelse(is.na(OffByCell$y.x), OffByCell$y.y, OffByCell$y.x),
PPS= OffByCell$PPS.y - OffByCell$PPS.x,
ST = OffByCell$ST.x,
cid = OffByCell$cid,
ST = OffByCell$ST.y)
#make team comparisons
Comparison <- merge(DiffOff, DiffDeff, by = "cid", all = T)
Comparison <- Comparison[,-c(6:7)]
Comparison$Diff <- c(Comparison$PPS.x + Comparison$PPS.y)
PPSAA <- weighted.mean((Comparison$PPS.x + Comparison$PPS.y), Comparison$ST.x)
OFF <- ggplot(DiffOff)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x, y = y, fill = PPS),
stat = "identity", alpha = 0.8) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle(paste(OffTeam, "Offensive\n Shot Chart", sep = "\n ")) + scale_fill_gradient2(name="Off PPS")
DEF <- ggplot(DiffDeff)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x, y = y, fill = PPS),
stat = "identity", alpha = 0.8) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle(paste(DefTown, "defensive\n Shot Chart", sep = "\n ")) + scale_fill_gradient2(name="Def PPS")
COMP <- ggplot(Comparison)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x.x, y = y.x, fill = Diff),
stat = "identity", alpha = 0.8) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle("Comparison\n Shot Chart") + scale_fill_gradient2(name="Difference\n PPS")
grid.arrange(DEF, OFF, COMP, ncol=3)
return(list(Off = DiffOff, deff = DiffDeff, Comparison = Comparison, Total = Totalhex, PPSAA = PPSAA))
}
Com <- ShotComparison(OffTeam = "Golden State Warriors", DefTown = "Philadelphia", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
Com$PPSAA
Com$PPSAA*100
Com <- ShotComparison(OffTeam = "Golden State Warriors", DefTown = "Oklahoma", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
names(shotDatafDef2016)
Com <- ShotComparison(OffTeam = "Golden State Warriors", DefTown = "Oklahoma City", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
Com$PPSAA
Com$PPSAA*100
ShotComparison <- function(OffTeam, DefTown, SeasondataOff, SeasonDataDef, nbins = 40) {
#Filter the offensive data of the Offensive Team
Off <- filter(SeasondataOff, TEAM_NAME == OffTeam)
#Filter the Deffensive data of the Defensive team
deff <- SeasonDataDef[names(SeasonDataDef) == DefTown][[1]]
#Get the maximum and minumum values for x and y
xbnds <- range(c(SeasondataOff$LOC_X, deff$LOC_X))
ybnds <- range(c(SeasondataOff$LOC_Y, deff$LOC_Y))
#Make hexbin dataframes out of the teams
##Total NBA data
Totalhex <- makeHexData(SeasondataOff)
##Defensive team data
Defhex <- makeHexData(deff)
##Offensive team data
Offhex <- makeHexData(Off)
#Merge offensive and deffensive data with total data by Cell id
DeffbyCell <- merge(Totalhex, Defhex, by = "cid", all = T)
OffByCell <- merge(Totalhex, Offhex, by = "cid", all = T)
##  when calculating the difference empty cells should count as 0
DeffbyCell$PPS.x[is.na(DeffbyCell$PPS.x)] <- 0
DeffbyCell$PPS.y[is.na(DeffbyCell$PPS.y)] <- 0
DeffbyCell$ST.y[is.na(DeffbyCell$ST.y)] <- 0
OffByCell$PPS.x[is.na(OffByCell$PPS.x)] <- 0
OffByCell$PPS.y[is.na(OffByCell$PPS.y)] <- 0
OffByCell$ST.y[is.na(OffByCell$ST.y)] <- 0
#  make a "difference" data.frame
DiffDeff <- data.frame(x = ifelse(is.na(DeffbyCell$x.x), DeffbyCell$x.y, DeffbyCell$x.x),
y = ifelse(is.na(DeffbyCell$y.x), DeffbyCell$y.y, DeffbyCell$y.x),
PPS= DeffbyCell$PPS.y - DeffbyCell$PPS.x,
cid= DeffbyCell$cid,
ST = DeffbyCell$ST.y)
DiffOff <- data.frame(x = ifelse(is.na(OffByCell$x.x), OffByCell$x.y, OffByCell$x.x),
y = ifelse(is.na(OffByCell$y.x), OffByCell$y.y, OffByCell$y.x),
PPS= OffByCell$PPS.y - OffByCell$PPS.x,
ST = OffByCell$ST.x,
cid = OffByCell$cid,
ST = OffByCell$ST.y)
#make team comparisons
Comparison <- merge(DiffOff, DiffDeff, by = "cid", all = T)
Comparison <- Comparison[,-c(6:7)]
Comparison$Diff <- c(Comparison$PPS.x + Comparison$PPS.y)
PPSAA <- weighted.mean((Comparison$PPS.x + Comparison$PPS.y), Comparison$ST.x)
OFF <- ggplot(DiffOff)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x, y = y, fill = PPS),
stat = "identity", alpha = 0.8) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle(paste(OffTeam, "Offensive\n Shot Chart", sep = " ")) + scale_fill_gradient2(name="Off PPS")
DEF <- ggplot(DiffDeff)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x, y = y, fill = PPS),
stat = "identity", alpha = 0.8) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle(paste(DefTown, "defensive\n Shot Chart", sep = " ")) + scale_fill_gradient2(name="Def PPS")
COMP <- ggplot(Comparison)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x.x, y = y.x, fill = Diff),
stat = "identity", alpha = 0.8) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle("Comparison\n Shot Chart") + scale_fill_gradient2(name="Difference\n PPS")
grid.arrange(DEF, OFF, COMP, ncol=3)
return(list(Off = DiffOff, deff = DiffDeff, Comparison = Comparison, Total = Totalhex, PPSAA = PPSAA))
}
Com <- ShotComparison(OffTeam = "Cleveland Cavaliers", DefTown = "Philadelphia", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
shotDataTotal2016$TEAM_NAME
unique(shotDataTotal2016$TEAM_NAME)
names(shotDatafDef2016)
makeHexData <- function(df) {
h <- hexbin(df$LOC_X, df$LOC_Y, nbins, xbnds = xbnds, ybnds = ybnds, IDs = TRUE)
data.frame(hcell2xy(h),
PPS = tapply(as.numeric(as.character(df$SHOT_MADE_FLAG))*ifelse(tolower(df$SHOT_TYPE) == "3pt field goal", 3, 2), h@cID, FUN = function(z) sum(z)/length(z)),
ST = tapply(df$SHOT_MADE_FLAG, h@cID, FUN = function(z) length(z)),
cid = h@cell)
}
ShotComparison <- function(OffTeam, DefTown, SeasondataOff, SeasonDataDef, nbins = 40) {
#Filter the offensive data of the Offensive Team
Off <- filter(SeasondataOff, TEAM_NAME == OffTeam)
#Filter the Deffensive data of the Defensive team
deff <- SeasonDataDef[names(SeasonDataDef) == DefTown][[1]]
#Get the maximum and minumum values for x and y
xbnds <- range(c(SeasondataOff$LOC_X, deff$LOC_X))
ybnds <- range(c(SeasondataOff$LOC_Y, deff$LOC_Y))
#Make hexbin dataframes out of the teams
##Total NBA data
Totalhex <- makeHexData(SeasondataOff)
##Defensive team data
Defhex <- makeHexData(deff)
##Offensive team data
Offhex <- makeHexData(Off)
#Merge offensive and deffensive data with total data by Cell id
DeffbyCell <- merge(Totalhex, Defhex, by = "cid", all = T)
OffByCell <- merge(Totalhex, Offhex, by = "cid", all = T)
##  when calculating the difference empty cells should count as 0
DeffbyCell$PPS.x[is.na(DeffbyCell$PPS.x)] <- 0
DeffbyCell$PPS.y[is.na(DeffbyCell$PPS.y)] <- 0
DeffbyCell$ST.y[is.na(DeffbyCell$ST.y)] <- 0
OffByCell$PPS.x[is.na(OffByCell$PPS.x)] <- 0
OffByCell$PPS.y[is.na(OffByCell$PPS.y)] <- 0
OffByCell$ST.y[is.na(OffByCell$ST.y)] <- 0
#  make a "difference" data.frame
DiffDeff <- data.frame(x = ifelse(is.na(DeffbyCell$x.x), DeffbyCell$x.y, DeffbyCell$x.x),
y = ifelse(is.na(DeffbyCell$y.x), DeffbyCell$y.y, DeffbyCell$y.x),
PPS= DeffbyCell$PPS.y - DeffbyCell$PPS.x,
cid= DeffbyCell$cid,
ST = DeffbyCell$ST.y)
DiffOff <- data.frame(x = ifelse(is.na(OffByCell$x.x), OffByCell$x.y, OffByCell$x.x),
y = ifelse(is.na(OffByCell$y.x), OffByCell$y.y, OffByCell$y.x),
PPS= OffByCell$PPS.y - OffByCell$PPS.x,
ST = OffByCell$ST.x,
cid = OffByCell$cid,
ST = OffByCell$ST.y)
#make team comparisons
Comparison <- merge(DiffOff, DiffDeff, by = "cid", all = T)
Comparison <- Comparison[,-c(6:7)]
Comparison$Diff <- c(Comparison$PPS.x + Comparison$PPS.y)
PPSAA <- weighted.mean((Comparison$PPS.x + Comparison$PPS.y), Comparison$ST.x)
OFF <- ggplot(DiffOff)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x, y = y, fill = PPS),
stat = "identity", alpha = 0.8) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle(paste(OffTeam, "Offensive\n Shot Chart", sep = " ")) + scale_fill_gradient2(name="Off PPS")
DEF <- ggplot(DiffDeff)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x, y = y, fill = PPS),
stat = "identity", alpha = 0.8) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle(paste(DefTown, "defensive\n Shot Chart", sep = " ")) + scale_fill_gradient2(name="Def PPS")
COMP <- ggplot(Comparison)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x.x, y = y.x, fill = Diff),
stat = "identity", alpha = 0.8) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle("Comparison\n Shot Chart") + scale_fill_gradient2(name="Difference\n PPS")
grid.arrange(DEF, OFF, COMP, ncol=3)
return(list(Off = DiffOff, deff = DiffDeff, Comparison = Comparison, Total = Totalhex, PPSAA = PPSAA))
}
Com1 <- ShotComparison(OffTeam = "Cleveland Cavaliers", DefTown = "Philadelphia", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
Com2 <- ShotComparison(OffTeam = "Cleveland", DefTown = "Philadelphia 76ers", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
Com2 <- ShotComparison(OffTeam = "Philadelphia 76ers", DefTown = "Cleveland", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
ShotComparison <- function(OffTeam, DefTown, SeasondataOff, SeasonDataDef, nbins = 40) {
#Filter the offensive data of the Offensive Team
Off <- filter(SeasondataOff, TEAM_NAME == OffTeam)
#Filter the Deffensive data of the Defensive team
deff <- SeasonDataDef[names(SeasonDataDef) == DefTown][[1]]
#Get the maximum and minumum values for x and y
xbnds <- range(c(SeasondataOff$LOC_X, deff$LOC_X))
ybnds <- range(c(SeasondataOff$LOC_Y, deff$LOC_Y))
#Make hexbin dataframes out of the teams
makeHexData <- function(df) {
h <- hexbin(df$LOC_X, df$LOC_Y, nbins, xbnds = xbnds, ybnds = ybnds, IDs = TRUE)
data.frame(hcell2xy(h),
PPS = tapply(as.numeric(as.character(df$SHOT_MADE_FLAG))*ifelse(tolower(df$SHOT_TYPE) == "3pt field goal", 3, 2), h@cID, FUN = function(z) sum(z)/length(z)),
ST = tapply(df$SHOT_MADE_FLAG, h@cID, FUN = function(z) length(z)),
cid = h@cell)
}
##Total NBA data
Totalhex <- makeHexData(SeasondataOff)
##Defensive team data
Defhex <- makeHexData(deff)
##Offensive team data
Offhex <- makeHexData(Off)
#Merge offensive and deffensive data with total data by Cell id
DeffbyCell <- merge(Totalhex, Defhex, by = "cid", all = T)
OffByCell <- merge(Totalhex, Offhex, by = "cid", all = T)
##  when calculating the difference empty cells should count as 0
DeffbyCell$PPS.x[is.na(DeffbyCell$PPS.x)] <- 0
DeffbyCell$PPS.y[is.na(DeffbyCell$PPS.y)] <- 0
DeffbyCell$ST.y[is.na(DeffbyCell$ST.y)] <- 0
OffByCell$PPS.x[is.na(OffByCell$PPS.x)] <- 0
OffByCell$PPS.y[is.na(OffByCell$PPS.y)] <- 0
OffByCell$ST.y[is.na(OffByCell$ST.y)] <- 0
#  make a "difference" data.frame
DiffDeff <- data.frame(x = ifelse(is.na(DeffbyCell$x.x), DeffbyCell$x.y, DeffbyCell$x.x),
y = ifelse(is.na(DeffbyCell$y.x), DeffbyCell$y.y, DeffbyCell$y.x),
PPS= DeffbyCell$PPS.y - DeffbyCell$PPS.x,
cid= DeffbyCell$cid,
ST = DeffbyCell$ST.y)
DiffOff <- data.frame(x = ifelse(is.na(OffByCell$x.x), OffByCell$x.y, OffByCell$x.x),
y = ifelse(is.na(OffByCell$y.x), OffByCell$y.y, OffByCell$y.x),
PPS= OffByCell$PPS.y - OffByCell$PPS.x,
ST = OffByCell$ST.x,
cid = OffByCell$cid,
ST = OffByCell$ST.y)
#make team comparisons
Comparison <- merge(DiffOff, DiffDeff, by = "cid", all = T)
Comparison <- Comparison[,-c(6:7)]
Comparison$Diff <- c(Comparison$PPS.x + Comparison$PPS.y)
PPSAA <- weighted.mean((Comparison$PPS.x + Comparison$PPS.y), Comparison$ST.x)
OFF <- ggplot(DiffOff)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x, y = y, fill = PPS),
stat = "identity", alpha = 0.8) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle(paste(OffTeam, "Offensive\n Shot Chart", sep = " ")) + scale_fill_gradient2(name="Off PPS")
DEF <- ggplot(DiffDeff)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x, y = y, fill = PPS),
stat = "identity", alpha = 0.8) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle(paste(DefTown, "defensive\n Shot Chart", sep = " ")) + scale_fill_gradient2(name="Def PPS")
COMP <- ggplot(Comparison)  +
annotation_custom(court, -250, 250, -52, 418) +
geom_hex(aes(x = x.x, y = y.x, fill = Diff),
stat = "identity", alpha = 0.8) +
guides(alpha = FALSE, size = FALSE) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold")) + ggtitle("Comparison\n Shot Chart") + scale_fill_gradient2(name="Difference\n PPS")
grid.arrange(DEF, OFF, COMP, ncol=3)
return(list(Off = DiffOff, deff = DiffDeff, Comparison = Comparison, Total = Totalhex, PPSAA = PPSAA))
}
Com2 <- ShotComparison(OffTeam = "Philadelphia 76ers", DefTown = "Cleveland", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
rm(xbnds)
Com2 <- ShotComparison(OffTeam = "Philadelphia 76ers", DefTown = "Cleveland", SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
shotDataTotal2016$TEAM_NAME
unique(shotDataTotal2016$TEAM_NAME)
defenseve_names <- names(shotDatafDef2016)
defenseve_names
Offensive_teams <- as.character(unique(shotDataTotal2016$TEAM_NAME))
Offensive_teams
Offensive_teams <- as.character(unique(shotDataTotal2016$TEAM_NAME))
defenseve_names <- names(shotDatafDef2016)
comparisons <- list()
comparisons <- list()
for (i in 1:length(Offensive_teams)) {
comparisons[i] <- ShotComparison(OffTeam = Offensive_teams[i], DefTown = defenseve_names[1], SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
print(comparisons[[i]]$PPSAA)
}
str(comparisons)
str(comparisons[[1]])
View(comparisons[[1]])
comparisons
comparisons[1]
str(comparisons)
comparisons[[1]][[3]]
comparisons[[1]][[4]]
comparisons[[1]][[5]]
comparisons[[1]][[6]]
comparisons[[1]][[7]]
comparisons[[1]][[5]]
comparisons[[1]][[1]]
comparisons[[1]][[2]]
comparisons[[1]][[3]]
ShotComparison(OffTeam = Offensive_teams[1], DefTown = defenseve_names[1], SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)
ShotComparison(OffTeam = Offensive_teams[1], DefTown = defenseve_names[1], SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 40)$PPSA
