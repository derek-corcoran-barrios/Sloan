stat_summary_hex(bins = 10,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none")
HEX25<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 25,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none")
HEX35<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 35,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 35")
library(gridExtra)
grid.arrange(HEX2, HEX10, HEX25, HEX35, mylegend,  layout_matrix=rbind(c(1,1,2,2), c(1,1,2,2) ,c(3,3,4,4), c(3,3,4,4), c(5,5,5,5)))
library(ggplot2)
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
p1<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 2,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(name = "PPS", midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="bottom", title = "PPS") +labs(fill = "PPS")
mylegend<-g_legend(p1)
HEX2<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 2,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none")
HEX10<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 10,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none")
HEX25<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 25,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none")
HEX35<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 35,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 35")
library(gridExtra)
grid.arrange(HEX2, HEX10, HEX25, HEX35, mylegend,  layout_matrix=rbind(c(1,1,2,2), c(1,1,2,2) ,c(3,3,4,4), c(3,3,4,4), c(5,5,5,5)))
p1<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 2,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(name = "PPS", midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="bottom", title = "PPS") +labs(fill = "PPS")
mylegend<-g_legend(p1)
p1<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 2,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(name = "PPS", midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="bottom", title = "PPS")
mylegend<-g_legend(p1)
p1<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 2,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(name = "PPS", midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="bottom")
mylegend<-g_legend(p1)
mylegend
p1<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 2,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(name = "PPS", midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="bottom")
mylegend<-g_legend(p1)
HEX2<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 2,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 2")  + theme(plot.title = element_text(hjust = 0.5))
HEX10<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 10,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 10")  + theme(plot.title = element_text(hjust = 0.5))
HEX25<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 25,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 25")  + theme(plot.title = element_text(hjust = 0.5))
HEX35<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 35,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 35")  + theme(plot.title = element_text(hjust = 0.5))
library(gridExtra)
grid.arrange(HEX2, HEX10, HEX25, HEX35, mylegend,  layout_matrix=rbind(c(1,1,2,2), c(1,1,2,2) ,c(3,3,4,4), c(3,3,4,4), c(5,5,5,5)))
library(ggplot2)
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
p1<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 2,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(name = "PPS", midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="bottom")   + guides(fill=guide_legend(title.position="top",
title.hjust =0.5))
mylegend<-g_legend(p1)
HEX2<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 2,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 2")  + theme(plot.title = element_text(hjust = 0.5))
HEX10<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 10,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 10")  + theme(plot.title = element_text(hjust = 0.5))
HEX25<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 25,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 25")  + theme(plot.title = element_text(hjust = 0.5))
HEX35<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 35,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 35")  + theme(plot.title = element_text(hjust = 0.5))
library(gridExtra)
grid.arrange(HEX2, HEX10, HEX25, HEX35, mylegend,  layout_matrix=rbind(c(1,1,2,2), c(1,1,2,2) ,c(3,3,4,4), c(3,3,4,4), c(5,5,5,5)))
?guide_legend
library(ggplot2)
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
p1<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 2,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(name = "PPS", midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="bottom")   + guides(fill=guide_legend(title.position="top",
title.hjust =0.5, label.position = "bottom"))
mylegend<-g_legend(p1)
HEX2<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 2,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 2")  + theme(plot.title = element_text(hjust = 0.5))
HEX10<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 10,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 10")  + theme(plot.title = element_text(hjust = 0.5))
HEX25<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 25,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 25")  + theme(plot.title = element_text(hjust = 0.5))
HEX35<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 35,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 35")  + theme(plot.title = element_text(hjust = 0.5))
library(gridExtra)
grid.arrange(HEX2, HEX10, HEX25, HEX35, mylegend,  layout_matrix=rbind(c(1,1,2,2), c(1,1,2,2) ,c(3,3,4,4), c(3,3,4,4), c(5,5,5,5)))
grid.arrange(HEX2, HEX10, HEX25, HEX35, mylegend,  layout_matrix=rbind(c(1,1,2,2), c(1,1,2,2) ,c(3,3,4,4), c(3,3,4,4), c(5,5,5,5)))
grid.arrange(HEX2, HEX10, HEX25, HEX35, mylegend,  layout_matrix=rbind(c(1,1,2,2), c(1,1,2,2) ,c(3,3,4,4), c(3,3,4,4), c(5,5,5,5)))
library(ggplot2)
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
p1<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 2,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(name = "PPS", midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="bottom")   + guides(fill=guide_legend(title.position="top",
title.hjust =0.5, label.position = "bottom"))
mylegend<-g_legend(p1)
HEX4<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 4,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 4")  + theme(plot.title = element_text(hjust = 0.5))
HEX10<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 10,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 10")  + theme(plot.title = element_text(hjust = 0.5))
HEX26<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 26,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 26")  + theme(plot.title = element_text(hjust = 0.5))
HEX36<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 36,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 36")  + theme(plot.title = element_text(hjust = 0.5))
library(gridExtra)
grid.arrange(HEX4, HEX10, HEX26, HEX36, mylegend,  layout_matrix=rbind(c(1,1,2,2), c(1,1,2,2) ,c(3,3,4,4), c(3,3,4,4), c(5,5,5,5)))
library(SpatialBall)
data("season2017")
#Examples with several teams
OffShotSeasonGraphTeam(season2017, team = "GSW",quant = 0.4)
OffShotSeasonGraphTeam(season2017, team = "Hou",quant = 0.4)
data("season2017")
#Examples with several teams
OffShotSeasonGraphTeam(season2017, team = "ORL",quant = 0.4)
grid.arrange(HEX4, HEX10, HEX26, HEX36, mylegend,  layout_matrix=rbind(c(1,1,2,2), c(1,1,2,2) ,c(3,3,4,4), c(3,3,4,4), c(5,5,5,5)))
library(ggplot2)
library(SpatialBall)
data("season2017")
data("court")
S2017 <- dplyr::filter(season2017, LOC_Y <= 449)
S2017$EVENT_TYPE <- ifelse(S2017$EVENT_TYPE == "Made Shot", 1, 0)
S2017$SHOT_TYPE <- ifelse(S2017$SHOT_TYPE == "3PT Field Goal", 3, 2)
S2017$Points <- S2017$EVENT_TYPE*S2017$SHOT_TYPE
library(ggplot2)
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
p1<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 2,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(name = "PPS", midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="bottom")   + guides(fill=guide_legend(title.position="top",
title.hjust =0.5, label.position = "bottom"))
mylegend<-g_legend(p1)
HEX4<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 4,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 4")  + theme(plot.title = element_text(hjust = 0.5))
HEX8<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 8,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 8")  + theme(plot.title = element_text(hjust = 0.5))
HEX26<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 26,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 26")  + theme(plot.title = element_text(hjust = 0.5))
HEX36<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 36,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 36")  + theme(plot.title = element_text(hjust = 0.5))
library(gridExtra)
grid.arrange(HEX4, HEX8, HEX26, HEX36, mylegend,  layout_matrix=rbind(c(1,1,2,2), c(1,1,2,2) ,c(3,3,4,4), c(3,3,4,4), c(5,5,5,5)))
library(ggplot2)
library(SpatialBall)
data("season2017")
data("court")
S2017 <- dplyr::filter(season2017, LOC_Y <= 449)
S2017$EVENT_TYPE <- ifelse(S2017$EVENT_TYPE == "Made Shot", 1, 0)
S2017$SHOT_TYPE <- ifelse(S2017$SHOT_TYPE == "3PT Field Goal", 3, 2)
S2017$Points <- S2017$EVENT_TYPE*S2017$SHOT_TYPE
library(ggplot2)
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
p1<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 2,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(name = "PPS", midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="bottom")   + guides(fill=guide_legend(title.position="top",
title.hjust =0.5, label.position = "bottom"))
mylegend<-g_legend(p1)
HEX4<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 4,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 4")  + theme(plot.title = element_text(hjust = 0.5))
HEX8<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 8,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 8")  + theme(plot.title = element_text(hjust = 0.5))
HEX26<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 26,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 26")  + theme(plot.title = element_text(hjust = 0.5))
HEX1<-  ggplot(S2017, aes(LOC_X, LOC_Y, z = Points))+ annotation_custom(court, -250, 250, -52, 418) +
stat_summary_hex(bins = 1,
fun = function(z) {
mean(z)
}, alpha = 0.8) + scale_fill_gradient2(midpoint = 1, low = "blue", high = "red", limits=c(0, 2)) + theme_void() + coord_fixed(xlim = c(-250, 250), ylim = c(-51, 270)) + theme(legend.position="none") + ggtitle("Bin = 1")  + theme(plot.title = element_text(hjust = 0.5))
library(gridExtra)
grid.arrange(HEX4, HEX8, HEX26, HEX1, mylegend,  layout_matrix=rbind(c(1,1,2,2), c(1,1,2,2) ,c(3,3,4,4), c(3,3,4,4), c(5,5,5,5)))
library(seewave)
?acustat
?acoustat
data(orni)
a<-meanspec(orni,f=22050,plot=FALSE)
specprop(a,f=22050)
parameters2 <- readRDS("parameters2.rds")
View(parameters2)
library(ggplot2)
ggplot(parameters2, aes(x = Rsq, y = nbins))  + geom_smooth() + geom_point()
ggplot(parameters2, aes(y = Rsq, x = nbins))  + geom_smooth() + geom_point()
ggplot(parameters2, aes(y = Rsq, x = nbins))  + geom_smooth() + geom_point() + geom_line()
library(SpatialBall)
library(SpatialBall)
data(season2017)
Season2016 <- readRDS("shotDataTotal2016")
Season2015 <- readRDS("shotDataTotal2015")
#Golden State home
Get_Apps(HomeTeam = "GSW", VisitorTeam = "Cle", Seasondata = season2017)
Season2016 <- readRDS("shotDataTotal2016")
Season2016 <- readRDS("shotDataTotal2016.rds")
Season2015 <- readRDS("shotDataTotal2015.rds")
Get_Apps(HomeTeam = "GSW", VisitorTeam = "Cle", Seasondata = season2017)
Get_Apps(HomeTeam = "GSW", VisitorTeam = "Cle", Seasondata = season2016)
Get_Apps(HomeTeam = "GSW", VisitorTeam = "Cle", Seasondata = season2015)
season2016 <- readRDS("shotDataTotal2016.rds")
season2015 <- readRDS("shotDataTotal2015.rds")
#Golden State home
Get_Apps(HomeTeam = "GSW", VisitorTeam = "Cle", Seasondata = season2017)
Get_Apps(HomeTeam = "GSW", VisitorTeam = "Cle", Seasondata = season2016)
Get_Apps(HomeTeam = "GSW", VisitorTeam = "Cle", Seasondata = season2015)
Get_Apps(HomeTeam = "Cle", VisitorTeam = "GSW", Seasondata = season2017)
Get_Apps(HomeTeam = "Cle", VisitorTeam = "GSW", Seasondata = season2016)
Get_Apps(HomeTeam = "Cle", VisitorTeam = "GSW", Seasondata = season2015)
?Get_Apps
OffShotSeasonGraphTeam(Seasondata = season2017, team = "GSW")
OffShotSeasonGraphTeam(Seasondata = season2017, team = "Cle")
DefShotSeasonGraphTeam(Seasondata = season2017, team = "GSW")
DefShotSeasonGraphTeam(Seasondata = season2017, team = "Cle")
666000+643500
?knitr
?kable
pacman::p_load(XML, lubridate)
#Gather data
## Year 2012
URL <- "http://www.basketball-reference.com/playoffs/NBA_2017_games.html"
schedule <- readHTMLTable(URL)
schedule <- schedule[[1]]
schedule[,3] <- gsub("Detroit Pistons", "Det", schedule[,3])
schedule[,3] <- gsub("Atlanta Hawks", "Atl", schedule[,3])
schedule[,3] <- gsub("Chicago Bulls", "Chi", schedule[,3])
schedule[,3] <- gsub("Boston Celtics", "Bos", schedule[,3])
schedule[,3] <- gsub("Cleveland Cavaliers", "Cle", schedule[,3])
schedule[,3] <- gsub("New Orleans Pelicans", "NO", schedule[,3])
schedule[,3] <- gsub("Golden State Warriors", "GSW", schedule[,3])
schedule[,3] <- gsub("Orlando Magic", "ORL", schedule[,3])
schedule[,3] <- gsub("Washington Wizards", "Was", schedule[,3])
schedule[,3] <- gsub("Philadelphia 76ers", "Phi", schedule[,3])
schedule[,3] <- gsub("Brooklyn Nets", "Bkn", schedule[,3])
schedule[,3] <- gsub("Utah Jazz", "Uta", schedule[,3])
schedule[,3] <- gsub("Miami Heat", "Mia", schedule[,3])
schedule[,3] <- gsub("Charlotte Hornets", "Cha", schedule[,3])
schedule[,3] <- gsub("Toronto Raptors", "Tor", schedule[,3])
schedule[,3] <- gsub("Indiana Pacers", "Ind", schedule[,3])
schedule[,3] <- gsub("Houston Rockets", "Hou", schedule[,3])
schedule[,3] <- gsub("Denver Nuggets", "Den", schedule[,3])
schedule[,3] <- gsub("Memphis Grizzlies", "Mem", schedule[,3])
schedule[,3] <- gsub("New York Knicks", "NY", schedule[,3])
schedule[,3] <- gsub("Milwaukee Bucks", "Mil", schedule[,3])
schedule[,3] <- gsub("Oklahoma City Thunder", "Okc", schedule[,3])
schedule[,3] <- gsub("San Antonio Spurs", "Sas", schedule[,3])
schedule[,3] <- gsub("Dallas Mavericks", "Dal", schedule[,3])
schedule[,3] <- gsub("Phoenix Suns", "Pho", schedule[,3])
schedule[,3] <- gsub("Portland Trail Blazers", "Por", schedule[,3])
schedule[,3] <- gsub("Los Angeles Clippers", "Lac", schedule[,3])
schedule[,3] <- gsub("Sacramento Kings", "Sac", schedule[,3])
schedule[,3] <- gsub("Los Angeles Lakers", "Lal", schedule[,3])
schedule[,3] <- gsub("Minnesota Timberwolves", "Min", schedule[,3])
schedule[,3] <- gsub("Charlotte Bobcats", "Cha", schedule[,3])
schedule[,3]<- gsub("New Orleans Hornets", "NO", schedule[,3])
schedule[,5] <- gsub("Detroit Pistons", "Det", schedule[,5])
schedule[,5] <- gsub("Atlanta Hawks", "Atl", schedule[,5])
schedule[,5] <- gsub("Chicago Bulls", "Chi", schedule[,5])
schedule[,5] <- gsub("Boston Celtics", "Bos", schedule[,5])
schedule[,5] <- gsub("Cleveland Cavaliers", "Cle", schedule[,5])
schedule[,5] <- gsub("New Orleans Pelicans", "NO", schedule[,5])
schedule[,5] <- gsub("Golden State Warriors", "GSW", schedule[,5])
schedule[,5] <- gsub("Orlando Magic", "ORL", schedule[,5])
schedule[,5] <- gsub("Washington Wizards", "Was", schedule[,5])
schedule[,5] <- gsub("Philadelphia 76ers", "Phi", schedule[,5])
schedule[,5] <- gsub("Brooklyn Nets", "Bkn", schedule[,5])
schedule[,5] <- gsub("Utah Jazz", "Uta", schedule[,5])
schedule[,5] <- gsub("Miami Heat", "Mia", schedule[,5])
schedule[,5] <- gsub("Charlotte Hornets", "Cha", schedule[,5])
schedule[,5] <- gsub("Toronto Raptors", "Tor", schedule[,5])
schedule[,5] <- gsub("Indiana Pacers", "Ind", schedule[,5])
schedule[,5] <- gsub("Houston Rockets", "Hou", schedule[,5])
schedule[,5] <- gsub("Denver Nuggets", "Den", schedule[,5])
schedule[,5] <- gsub("Memphis Grizzlies", "Mem", schedule[,5])
schedule[,5] <- gsub("New York Knicks", "NY", schedule[,5])
schedule[,5] <- gsub("Milwaukee Bucks", "Mil", schedule[,5])
schedule[,5] <- gsub("Oklahoma City Thunder", "Okc", schedule[,5])
schedule[,5] <- gsub("San Antonio Spurs", "Sas", schedule[,5])
schedule[,5] <- gsub("Dallas Mavericks", "Dal", schedule[,5])
schedule[,5] <- gsub("Phoenix Suns", "Pho", schedule[,5])
schedule[,5] <- gsub("Portland Trail Blazers", "Por", schedule[,5])
schedule[,5] <- gsub("Los Angeles Clippers", "Lac", schedule[,5])
schedule[,5] <- gsub("Sacramento Kings", "Sac", schedule[,5])
schedule[,5] <- gsub("Los Angeles Lakers", "Lal", schedule[,5])
schedule[,5] <- gsub("Minnesota Timberwolves", "Min", schedule[,5])
schedule[,5] <- gsub("Charlotte Bobcats", "Cha", schedule[,5])
schedule[,5]<- gsub("New Orleans Hornets", "NO", schedule[,5])
schedule$Date <- mdy(as.character(schedule$Date))
schedule[,4] <- as.numeric(as.character(schedule[,4]))
schedule[,6] <- as.numeric(as.character(schedule[,6]))
schedule$defAPPS <- NA
schedule$offAPPS <- NA
schedule$HomeRes <- NA
schedule <- schedule[,-c(2,7:9)]
colnames(schedule) <- c("Date", "Visitor", "Visit_PTS", "Home", "Home_PTS", "defAPPS", "offAPPS", "HomeRes")
schedule$Season <- 2017
schedule$HomeRes <- schedule$Visit_PTS - schedule$Home_PTS
library(SpatialBall)
data("season2017")
data("season2017")
Playoffs2017 <- list()
for (i in 1:nrow(schedule)){
Playoffs2017[[i]] <- Get_Apps(HomeTeam = schedule$Home[i], VisitorTeam = schedule$Visitor[i], Seasondata = season2017)
}
library(SpatialBall)
data("season2017")
Playoffs2017 <- list()
for (i in 1:nrow(schedule)){
Playoffs2017[[i]] <- Get_Apps(HomeTeam = schedule$Home[i], VisitorTeam = schedule$Visitor[i], Seasondata = season2017)
}
Playoffs2017 <- do.call(rbind, Playoffs2017)
summary(Playoffs2017
)
source('~/Documents/Sloan/Playoffs2017.R')
schedule$defAPPS <- Playoffs2017$defAPPS
schedule$offAPPS <- Playoffs2017$offAPPS
Trains <- readRDS("TRAINS.rds")
trains <- readRDS("trains.rds")
str(trains)
param <- readRDS("parameters.rds")
param
trains[[42]]
param2 <- readRDS("parameters2.rds")
param2
length(trains)
param
trains[[7]]
trains <- readRDS("trains.rds")
train <- trains[[7]]
View(train)
tests <- readRDS("tests.rds")
test <- tests[[7]]
View(test)
colnames(Playoffs2017)
summary(test)
schedule$defAPPS <- Playoffs2017$defAPPS
schedule$offAPPS <- Playoffs2017$offAPPS
schedule$PredBRT <- Playoffs2017$spread
View(schedule)
View(test)
schedule$Type <- "Playoffs"
View(schedule)
Playoffs2017 <- schedule
saveRDS(Playoffs2017, "Playoffs2017.rds")
View(Playoffs2017)
nrow(test)
nrow(test)+ nrow(Playoffs2017)
colnames(test)
summary(test)
test$Season
season2016 <- readRDS("shotDataTotal2016")
season2016 <- readRDS("shotDataTotal2016.rds")
test$PredBRT <- NA
for (i in 1:nrow(test)){
if (test$Season == 2017){
test$PredBRT [i] <- Get_Apps(HomeTeam = test$Home[i], VisitorTeam = test$Visitor[i], Seasondata = season2017)
}
else if (test$Season == 2016){
test$PredBRT [i] <- Get_Apps(HomeTeam = test$Home[i], VisitorTeam = test$Visitor[i], Seasondata = season2016)
}
}
test$PredBRT <- NA
for (i in 1:nrow(test)){
if (test$Season == 2017){
test$PredBRT[i] <- Get_Apps(HomeTeam = test$Home[i], VisitorTeam = test$Visitor[i], Seasondata = season2017)$spread
}
else if (test$Season == 2016){
test$PredBRT[i] <- Get_Apps(HomeTeam = test$Home[i], VisitorTeam = test$Visitor[i], Seasondata = season2016)$spread
}
}
summary(test)
Test2017 <- merge(test, Playoffs2017, all = TRUE)
View(Test2017)
plot(predBRT~HomeRes, data = Test2017)
plot(PredBRT~HomeRes, data = Test2017)
summary(lm(PredBRT~HomeRes, data = Test2017))
Test2017 <- merge(test, Playoffs2017, all = TRUE)
saveRDS(Test2017, "Test2017.rds")
write.csv(Test2017, "Test2017.csv")
summary(Test2017)
plot(PredBRT~HomeRes, data = Test2017)
abline(lm(PredBRT~HomeRes, data = Test2017))
abline(y =
0)
abline(h = 0)
?abline
abline(a = 0, b = 1, lty = 2)
