legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold"))+ scale_size(range = c(0, maxsize)) + ylim(c(-40, 270))+ theme(legend.position="none") +  ggtitle(paste(OffTeam, "Offensive\n Shot Chart", sep = " "))
DEF <- ggplot(DFDEF, aes(x=x, y = y))+ annotation_custom(court, -250, 250, -52, 418) + geom_polygon(aes(group = id, fill = PPS))+ scale_fill_gradient2(low ="blue", high = "red", limits=c(-1.4, 1.4)) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold"))+ scale_size(range = c(0, maxsize)) + ylim(c(-40, 270))+ theme(legend.position="none") + ggtitle(paste(DefTown, "defensive\n Shot Chart", sep = " "))
COMP <- ggplot(DFDIF, aes(x=x, y = y))+ annotation_custom(court, -250, 250, -52, 418) + geom_polygon(aes(group = id, fill = Dif)) + scale_fill_gradient2(low ="blue", high = "red", limits=c(-1.4, 1.4)) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold"))+ scale_size(range = c(0, maxsize)) +  ylim(c(-40, 270))+ theme(legend.position="none") + ggtitle("Comparison\n Shot Chart")
charts <- arrangeGrob(DEF,OFF, COMP, ncol = 3)
p <- grid.arrange(arrangeGrob(arrangeGrob(DEF,OFF, COMP, ncol = 3),leg,ncol=1,heights=c(7/8,1/8)))
return(list(Off = DiffOff, deff = DiffDeff, Comparison = Comparison, Total = Totalhex, PPSAA = PPSAA, p = p, leg = leg, charts = charts))
}
Com1 <- ShotComparisonGraph2(OffTeam = "Cleveland Cavaliers", DefTown = "Golden State", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.8, focus = "all")
Com1 <- ShotComparisonGraph2(OffTeam = "Cle", DefTown = "Golden State", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.8, focus = "all")
Com1 <- ShotComparisonGraph2(OffTeam = "Phi", DefTown = "Golden State", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.8, focus = "all")
Com1$PPSAA
shotDataTotal2017b <- shotDataTotal2017
####Trade Korver to cleveland
shotDataTotal2017b$TEAM_NAME <-ifelse(shotDataTotal2017b$PLAYER_NAME == "Kyle Korver", "Cleveland Cavaliers", shotDataTotal2017b$TEAM_NAME)
shotDataTotal2017b$TEAM_NAME <-ifelse(shotDataTotal2017b$PLAYER_NAME == "Mike Dunleavy", "Atlanta Hawks", shotDataTotal2017b$TEAM_NAME)
##Only positives
Com1 <- ShotComparisonGraph2(OffTeam = "Cle", DefTown = "Golden State", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.8, focus = "all")
Com2 <- ShotComparisonGraph2(OffTeam = "Cle", DefTown = "Golden State", SeasondataOff = shotDataTotal2017b, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.8, focus = "all")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
shotDatafDef2017
str(shotDatafDef2017)
names(shotDatafDef)
testy <- readRDS("shotDatafDef2016.rds")
names(testy)
names(shotDatafDef)
shotDataTotal2017$TEAM_NAME
unique(shotDataTotal2017$TEAM_NAME)
shotDatafDef2017[[LA]]
shotDatafDef2017[["LA"]]
shotDatafDef2014[["LA"]]
shotDatafDef2016[["LA"]]
names(shotDatafDef2016)
unique(shotDataTotal2017$TEAM_NAME)
shotDatafDef2016[["LA"]]
shotDatafDef2016[["Los Angeles"]]
shotDatafDef2017[["Los Angeles"]]
unique(shotDataTotal2017$TEAM_NAME)
names(shotDatafDef2017) <- c("Atl", "Bos", "Cle", "NO", "Chi", "Dal", "Den", "GSW", "Hou", "Lac", "Lal", "Mia", "Mil", "Min", "Bkn", "NY", "ORL", "Ind", "Phi", "Pho", "Por", "Sac", "Sas", "Okc", "Tor", "Uta", "Mem", "Was", "Det", "Cha")
Com1 <- ShotComparisonGraph2(OffTeam = "Cle", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.8, focus = "all")
library(rjson)
library(grid)
library(gridExtra)
library(png)
library(RCurl)
library(ggplot2)
library(jpeg)
library(hexbin)
library(sp)
library(knitr)
library(raster)
library(rasterVis)
library(dplyr)
Com1 <- ShotComparisonGraph2(OffTeam = "Cle", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.8, focus = "all")
saveRDS(shotDatafDef2017, 'shotDatafDef2017.rds')
saveRDS(shotDatafDef2017, 'shotDatafDef2017.rds')
library(rjson)
library(grid)
library(gridExtra)
library(png)
library(RCurl)
library(ggplot2)
library(jpeg)
library(hexbin)
library(sp)
library(knitr)
library(raster)
library(rasterVis)
library(dplyr)
court <- readRDS("court.rds")
court2 <- readRDS("court2.rds")
court3 <- readRDS("court3.rds")
shotDatafDef2017 <- readRDS("shotDatafDef2017.rds")
shotDataTotal2017 <- readRDS("shotDataTotal2017.rds")
shotDatafDef2013 <- readRDS("shotDatafDef2013.rds")
shotDataTotal2013 <- readRDS("shotDataTotal2013.rds")
ShotComparisonGraph <- function(OffTeam, DefTown, SeasondataOff, SeasonDataDef, nbins = 30, maxsize = 7, quant = 0.7) {
#Filter the offensive data of the Offensive Team
Off <- filter(SeasondataOff, TEAM_NAME == OffTeam)
#Filter the Deffensive data of the Defensive team
deff <- SeasonDataDef[names(SeasonDataDef) == DefTown][[1]]
#Get the maximum and minumum values for x and y
xbnds <- range(c(SeasondataOff$LOC_X, deff$LOC_X))
ybnds <- range(c(SeasondataOff$LOC_Y, deff$LOC_Y))
#Make hexbin dataframes out of the teams
makeHexData <- function(df) {
h <- hexbin(df$LOC_X, df$LOC_Y, nbins, xbnds = xbnds, ybnds = ybnds, IDs = TRUE)
data.frame(hcell2xy(h),
PPS = tapply(as.numeric(as.character(df$SHOT_MADE_FLAG))*ifelse(tolower(df$SHOT_TYPE) == "3pt field goal", 3, 2), h@cID, FUN = function(z) sum(z)/length(z)),
ST = tapply(df$SHOT_MADE_FLAG, h@cID, FUN = function(z) length(z)),
cid = h@cell)
}
##Total NBA data
Totalhex <- makeHexData(SeasondataOff)
##Defensive team data
Defhex <- makeHexData(deff)
##Offensive team data
Offhex <- makeHexData(Off)
#Merge offensive and deffensive data with total data by Cell id
DeffbyCell <- merge(Totalhex, Defhex, by = "cid", all = T)
OffByCell <- merge(Totalhex, Offhex, by = "cid", all = T)
##  when calculating the difference empty cells should count as 0
DeffbyCell$PPS.x[is.na(DeffbyCell$PPS.x)] <- 0
DeffbyCell$PPS.y[is.na(DeffbyCell$PPS.y)] <- 0
DeffbyCell$ST.y[is.na(DeffbyCell$ST.y)] <- 0
OffByCell$PPS.x[is.na(OffByCell$PPS.x)] <- 0
OffByCell$PPS.y[is.na(OffByCell$PPS.y)] <- 0
OffByCell$ST.y[is.na(OffByCell$ST.y)] <- 0
#  make a "difference" data.frame
DiffDeff <- data.frame(x = ifelse(is.na(DeffbyCell$x.x), DeffbyCell$x.y, DeffbyCell$x.x),
y = ifelse(is.na(DeffbyCell$y.x), DeffbyCell$y.y, DeffbyCell$y.x),
PPS= DeffbyCell$PPS.y - DeffbyCell$PPS.x,
cid= DeffbyCell$cid,
ST = DeffbyCell$ST.y)
DiffOff <- data.frame(x = ifelse(is.na(OffByCell$x.x), OffByCell$x.y, OffByCell$x.x),
y = ifelse(is.na(OffByCell$y.x), OffByCell$y.y, OffByCell$y.x),
PPS= OffByCell$PPS.y - OffByCell$PPS.x,
ST = OffByCell$ST.x,
cid = OffByCell$cid,
ST = OffByCell$ST.y)
#make team comparisons
Comparison <- merge(DiffOff, DiffDeff, by = "cid", all = T)
Comparison <- Comparison[,-c(6:7)]
Comparison$Diff <- c(Comparison$PPS.x + Comparison$PPS.y)
PPSAA <- weighted.mean((Comparison$PPS.x + Comparison$PPS.y), Comparison$ST.x)
#Legend extractor
g_legend <- function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
#Function to transform hexbins into polygons
hex_coord_df <- function(x, y, width, height, size = 1) {
# like hex_coord but returns a dataframe of vertices grouped by an id variable
dx <- log(size * width / 6)
dy <- log(size * height / 2 / sqrt(3))
hex_x <- rbind(x - 2 * dx, x - dx, x + dx, x + 2 * dx, x + dx, x - dx)
hex_y <- rbind(y, y + dy, y + dy, y, y - dy, y - dy)
id    <- rep(1:length(x), each=6)
data.frame(cbind(x=as.vector(hex_x), y=as.vector(hex_y), id))
}
#Filter by quantile
DiffOff <- filter(DiffOff, ST > quantile(DiffOff$ST, probs = quant))
DiffDeff <- filter(DiffDeff, ST > quantile(DiffDeff$ST, probs = quant))
Comparison <- filter(Comparison, ST.x > quantile(Comparison$ST.x, probs = quant))
#Transform Hexbins into polygons
DFOFF <- hex_coord_df(DiffOff$x, DiffOff$y, (0.05*DiffOff$ST), (0.05*DiffOff$ST), size =1)
DFOFF$PPS <- rep(DiffOff$PPS, each = 6)
DFDEF <- hex_coord_df(DiffDeff$x, DiffDeff$y, DiffDeff$ST, DiffDeff$ST, size =1)
DFDEF$PPS <- rep(DiffDeff$PPS, each = 6)
DFDIF <- hex_coord_df(Comparison$x.x, Comparison$y.x, (0.05*Comparison$ST.x),(0.05*Comparison$ST.x), size =1)
DFDIF$Dif <- rep(Comparison$Diff, each = 6)
#Create Legend
OFFLEG <- ggplot(DFOFF, aes(x=x, y = y))+ annotation_custom(court, -250, 250, -52, 418) + geom_polygon(aes(group = id, fill = PPS)) + scale_fill_gradient2(low ="blue", high = "red", limits=c(-1.2, 1.2)) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold"))+ scale_size(range = c(0, maxsize)) + ylim(c(-40, 270))+ theme(legend.position="bottom") +  ggtitle(paste(OffTeam, "Offensive\n Shot Chart", sep = " "))
leg<-g_legend(OFFLEG)
OFF <- ggplot(DFOFF, aes(x=x, y = y))+ annotation_custom(court, -250, 250, -52, 418) + geom_polygon(aes(group = id, fill = PPS)) + scale_fill_gradient2(low ="blue", high = "red", limits=c(-1.2, 1.2)) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold"))+ scale_size(range = c(0, maxsize)) + ylim(c(-40, 270))+ theme(legend.position="none") +  ggtitle(paste(OffTeam, "Offensive\n Shot Chart", sep = " "))
DEF <- ggplot(DFDEF, aes(x=x, y = y))+ annotation_custom(court, -250, 250, -52, 418) + geom_polygon(aes(group = id, fill = PPS))+ scale_fill_gradient2(low ="blue", high = "red", limits=c(-1.2, 1.2)) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold"))+ scale_size(range = c(0, maxsize)) + ylim(c(-40, 270))+ theme(legend.position="none") + ggtitle(paste(DefTown, "defensive\n Shot Chart", sep = " "))
COMP <- ggplot(DFDIF, aes(x=x, y = y))+ annotation_custom(court, -250, 250, -52, 418) + geom_polygon(aes(group = id, fill = Dif)) + scale_fill_gradient2(low ="blue", high = "red", limits=c(-1.2, 1.2)) +
coord_fixed()  +theme(line = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size = 17, lineheight = 1.2, face = "bold"))+ scale_size(range = c(0, maxsize)) +  ylim(c(-40, 270))+ theme(legend.position="none") + ggtitle("Comparison\n Shot Chart")
charts <- arrangeGrob(DEF,OFF, COMP, ncol = 3)
p <- grid.arrange(arrangeGrob(arrangeGrob(DEF,OFF, COMP, ncol = 3),leg,ncol=1,heights=c(7/8,1/8)))
return(list(Off = DiffOff, deff = DiffDeff, Comparison = Comparison, Total = Totalhex, PPSAA = PPSAA, p = p, leg = leg, charts = charts))
}
Com1 <- ShotComparisonGraph(OffTeam = "GSW", DefTown = "Mia", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.7)
Com2 <- ShotComparisonGraph(OffTeam = "Mia", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.7)
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
Com1$PPSAA
Com2$PPSAA
Com1$PPSAA
Com1 <- ShotComparisonGraph2(OffTeam = "GSW", DefTown = "Mia", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.8, focus = "all")
Com2 <- ShotComparisonGraph2(OffTeam = "Mia", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.8, focus = "all")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
Com1 <- ShotComparisonGraph2(OffTeam = "GSW", DefTown = "Mia", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.8, focus = "plus")
Com2 <- ShotComparisonGraph2(OffTeam = "Mia", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.8, focus = "plus")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
Com1 <- ShotComparisonGraph2(OffTeam = "GSW", DefTown = "Mia", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.9, focus = "plus")
Com2 <- ShotComparisonGraph2(OffTeam = "Mia", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.9, focus = "plus")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
Com1 <- ShotComparisonGraph2(OffTeam = "GSW", DefTown = "Mia", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.9, focus = "minus")
Com2 <- ShotComparisonGraph2(OffTeam = "Mia", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.9, focus = "minus")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
Com1 <- ShotComparisonGraph2(OffTeam = "GSW", DefTown = "Mia", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.7, focus = "minus")
Com2 <- ShotComparisonGraph2(OffTeam = "Mia", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.7, focus = "minus")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
Com1 <- ShotComparisonGraph2(OffTeam = "GSW", DefTown = "Mia", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
Com2 <- ShotComparisonGraph2(OffTeam = "Mia", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
defenseve_names <- names(shotDatafDef2017)
defenseve_names
Offensive_teams <- as.character(unique(shotDataTotal2017$TEAM_NAME))
Offensive_teams
defenseve_names <- names(shotDatafDef2017)
df <- data.frame(matrix(ncol = 30, nrow = 30))
colnames(df) <- as.character(unique(shotDataTotal2017$TEAM_NAME))
rownames(df) <- names(shotDatafDef2017)
for (i in 1:length(Offensive_teams)) {
for (j in 1:length(defenseve_names)){
df[rownames(df) == defenseve_names[j],colnames(df) == Offensive_teams[i]] <- ShotComparison(OffTeam = Offensive_teams[i], DefTown = defenseve_names[j], SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 30)$PPSAA
}
}
datos2017
Com1 <- ShotComparisonGraph2(OffTeam = "NO", DefTown = "Cle", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
Com2 <- ShotComparisonGraph2(OffTeam = "Cle", DefTown = "NO", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
Com1$PPSAA
Com2$PPSAA
Com1$PPSAA*100
Com2$PPSAA*100
##Only positives
Com1 <- ShotComparisonGraph2(OffTeam = "NO", DefTown = "Cle", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "plus")
Com2 <- ShotComparisonGraph2(OffTeam = "Cle", DefTown = "NO", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "plus")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
##Only positives
Com1 <- ShotComparisonGraph2(OffTeam = "GS", DefTown = "Mia", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "add")
Com2 <- ShotComparisonGraph2(OffTeam = "Mia", DefTown = "GS", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "add")
Com1 <- ShotComparisonGraph2(OffTeam = "GS", DefTown = "Mia", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "add")
Com2 <- ShotComparisonGraph2(OffTeam = "Mia", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "add")
Com1 <- ShotComparisonGraph2(OffTeam = "GS", DefTown = "Mia", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "add")
Com1 <- ShotComparisonGraph2(OffTeam = "GSW", DefTown = "Mia", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
Com2 <- ShotComparisonGraph2(OffTeam = "Mia", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
Com1$PPSAA
Com1$PPSAA*100
Com2$PPSAA*100
Com2 <- ShotComparisonGraph2(OffTeam = "Mia", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "add")
Com1 <- ShotComparisonGraph2(OffTeam = "GSW", DefTown = "Mia", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "add")
Com2 <- ShotComparisonGraph2(OffTeam = "Mia", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "add")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
Com1 <- ShotComparisonGraph2(OffTeam = "GSW", DefTown = "Mia", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
Com2 <- ShotComparisonGraph2(OffTeam = "Mia", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
Com1$PPSAA*100
Com2$PPSAA*100
Com1 <- ShotComparisonGraph2(OffTeam = "GSW", DefTown = "Hou", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
Com2 <- ShotComparisonGraph2(OffTeam = "Mia", DefTown = "Hou", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
Com1 <- ShotComparisonGraph2(OffTeam = "GSW", DefTown = "Hou", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
Com2 <- ShotComparisonGraph2(OffTeam = "Hou", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
Com1$PPSAA
Com1$PPSAA*100
Com2$PPSAA*100
Com1 <- ShotComparisonGraph2(OffTeam = "GSW", DefTown = "Den", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
Com2 <- ShotComparisonGraph2(OffTeam = "Den", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
Com1$PPSAA*100
Com2$PPSAA*100
Com1 <- ShotComparisonGraph2(OffTeam = "GSW", DefTown = "Uta", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
Com2 <- ShotComparisonGraph2(OffTeam = "Uta", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
Com1$PPSAA*100
Com2$PPSAA*100
Com1 <- ShotComparisonGraph2(OffTeam = "GSW", DefTown = "Sas", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
Com2 <- ShotComparisonGraph2(OffTeam = "Sas", DefTown = "GSW", SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30, quant = 0.75, focus = "all")
grid.arrange(Com1$charts,Com2$charts,Com1$leg,ncol=1,heights=c(3/7, 3/7 ,1/7))
Com1$PPSAA*100
library(rjson)
library(grid)
library(gridExtra)
library(png)
library(RCurl)
library(ggplot2)
library(jpeg)
library(hexbin)
library(sp)
library(knitr)
library(raster)
library(rasterVis)
library(dplyr)
by_team <- read.csv("~/Sloan/by_team.csv")
by_team <- by_team[-1,-1]
teamID <- by_team$team_id
teamName <- by_team$team_city
defensiveURL <- list()
shotData <- list()
shotDatafDef <- list()
shotURLtotal <- paste("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2016-17&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2016-17&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=", sep = "")
# import from JSON
shotDataTotal <- fromJSON(file = shotURLtotal, method="C")
# unlist shot data, save into a data frame
shotchartTotal2017 <- data.frame(matrix(ncol = 24, nrow = 1))
colnames(shotchartTotal2017)<- shotDataTotal$resultSets[[1]][[2]]
#fist shot of the season
for(i in 1:length(shotDataTotal$resultSets[[1]][[3]])){
shotchartTotal2017[i,] <- unlist(shotDataTotal$resultSets[[1]][[3]][[i]])
}
# covert x and y coordinates into numeric
shotchartTotal2017$LOC_X <- as.numeric(as.character(shotchartTotal2017$LOC_X))
shotchartTotal2017$LOC_Y <- as.numeric(as.character(shotchartTotal2017$LOC_Y))
shotchartTotal2017$SHOT_DISTANCE <- as.numeric(as.character(shotchartTotal2017$SHOT_DISTANCE))
shotDataTotal2017 <- shotchartTotal2017
shotDataTotal2017$TEAM_NAME <- gsub("Detroit Pistons", "Det", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Atlanta Hawks", "Atl", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Chicago Bulls", "Chi", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Boston Celtics", "Bos", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Cleveland Cavaliers", "Cle", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("New Orleans Pelicans", "NO", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Golden State Warriors", "GSW", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Orlando Magic", "ORL", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Washington Wizards", "Was", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Philadelphia 76ers", "Phi", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Brooklyn Nets", "Bkn", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Utah Jazz", "Uta", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Miami Heat", "Mia", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Charlotte Hornets", "Cha", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Toronto Raptors", "Tor", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Indiana Pacers", "Ind", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Houston Rockets", "Hou", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Denver Nuggets", "Den", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Memphis Grizzlies", "Mem", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("New York Knicks", "NY", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Milwaukee Bucks", "Mil", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Oklahoma City Thunder", "Okc", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("San Antonio Spurs", "Sas", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Dallas Mavericks", "Dal", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Phoenix Suns", "Pho", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Portland Trail Blazers", "Por", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("LA Clippers", "Lac", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Sacramento Kings", "Sac", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Los Angeles Lakers", "Lal", shotDataTotal2017$TEAM_NAME)
shotDataTotal2017$TEAM_NAME <- gsub("Minnesota Timberwolves", "Min", shotDataTotal2017$TEAM_NAME)
str(shotDataTotal2017)
library(rjson)
library(grid)
library(gridExtra)
library(png)
library(RCurl)
library(ggplot2)
library(jpeg)
library(hexbin)
library(sp)
library(knitr)
library(raster)
library(rasterVis)
library(dplyr)
by_team <- read.csv("~/Sloan/by_team.csv")
by_team <- by_team[-1,-1]
teamID <- by_team$team_id
teamName <- by_team$team_city
defensiveURL <- list()
shotData <- list()
shotDatafDef <- list()
shotURLtotal <- paste("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2016-17&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2016-17&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=", sep = "")
# import from JSON
shotDataTotal <- fromJSON(file = shotURLtotal, method="C")
View(shotDataTotal2017)
str(shotDataTotal2017)
for (i in 1:length(teamID)){
defensiveURL[[i]] <- paste("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2016-17&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=", by_team$team_id[i],"&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2016-17&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=", sep = "")
# import from JSON
shotData[[i]] <- fromJSON(file = defensiveURL[[i]], method="C")
# unlist shot data, save into a data frame
shotDatafDef[[i]] <- data.frame(matrix(ncol = 24, nrow = 1))
colnames(shotDatafDef[[i]]) <-  shotData[[i]]$resultSets[[1]][[2]]
for(j in 1:length(shotData[[i]]$resultSets[[1]][[3]])){
shotDatafDef[[i]][j,] <- unlist(shotData[[i]]$resultSets[[1]][[3]][[j]])
}
# covert x and y coordinates into numeric
shotDatafDef[[i]]$LOC_X <- as.numeric(as.character(shotDatafDef[[i]]$LOC_X))
shotDatafDef[[i]]$LOC_Y <- as.numeric(as.character(shotDatafDef[[i]]$LOC_Y))
shotDatafDef[[i]]$SHOT_DISTANCE <- as.numeric(as.character(shotDatafDef[[i]]$SHOT_DISTANCE))
}
names(shotDatafDef) <- teamName
shotDatafDef2017 <- shotDatafDef
names(shotDatafDef2017) <- c("Atl", "Bos", "Cle", "NO", "Chi", "Dal", "Den", "GSW", "Hou", "Lac", "Lal", "Mia", "Mil", "Min", "Bkn", "NY", "ORL", "Ind", "Phi", "Pho", "Por", "Sac", "Sas", "Okc", "Tor", "Uta", "Mem", "Was", "Det", "Cha")
library(rjson)
library(grid)
library(gridExtra)
library(png)
library(RCurl)
library(ggplot2)
library(jpeg)
library(hexbin)
library(sp)
library(knitr)
library(raster)
library(rasterVis)
library(dplyr)
#function to make the hexbin dataframe
#shot Comparison function
ShotComparison <- function(OffTeam, DefTown, SeasondataOff, SeasonDataDef, nbins = 40) {
#Filter the offensive data of the Offensive Team
Off <- filter(SeasondataOff, TEAM_NAME == OffTeam)
#Filter the Deffensive data of the Defensive team
deff <- SeasonDataDef[names(SeasonDataDef) == DefTown][[1]]
#Get the maximum and minumum values for x and y
xbnds <- range(c(SeasondataOff$LOC_X, deff$LOC_X))
ybnds <- range(c(SeasondataOff$LOC_Y, deff$LOC_Y))
#Make hexbin dataframes out of the teams
makeHexData <- function(df) {
h <- hexbin(df$LOC_X, df$LOC_Y, nbins, xbnds = xbnds, ybnds = ybnds, IDs = TRUE)
data.frame(hcell2xy(h),
PPS = tapply(as.numeric(as.character(df$SHOT_MADE_FLAG))*ifelse(tolower(df$SHOT_TYPE) == "3pt field goal", 3, 2), h@cID, FUN = function(z) sum(z)/length(z)),
ST = tapply(df$SHOT_MADE_FLAG, h@cID, FUN = function(z) length(z)),
cid = h@cell)
}
##Total NBA data
Totalhex <- makeHexData(SeasondataOff)
##Defensive team data
Defhex <- makeHexData(deff)
##Offensive team data
Offhex <- makeHexData(Off)
#Merge offensive and deffensive data with total data by Cell id
DeffbyCell <- merge(Totalhex, Defhex, by = "cid", all = T)
OffByCell <- merge(Totalhex, Offhex, by = "cid", all = T)
##  when calculating the difference empty cells should count as 0
DeffbyCell$PPS.x[is.na(DeffbyCell$PPS.x)] <- 0
DeffbyCell$PPS.y[is.na(DeffbyCell$PPS.y)] <- 0
DeffbyCell$ST.y[is.na(DeffbyCell$ST.y)] <- 0
OffByCell$PPS.x[is.na(OffByCell$PPS.x)] <- 0
OffByCell$PPS.y[is.na(OffByCell$PPS.y)] <- 0
OffByCell$ST.y[is.na(OffByCell$ST.y)] <- 0
#  make a "difference" data.frame
DiffDeff <- data.frame(x = ifelse(is.na(DeffbyCell$x.x), DeffbyCell$x.y, DeffbyCell$x.x),
y = ifelse(is.na(DeffbyCell$y.x), DeffbyCell$y.y, DeffbyCell$y.x),
PPS= DeffbyCell$PPS.y - DeffbyCell$PPS.x,
cid= DeffbyCell$cid,
ST = DeffbyCell$ST.y)
DiffOff <- data.frame(x = ifelse(is.na(OffByCell$x.x), OffByCell$x.y, OffByCell$x.x),
y = ifelse(is.na(OffByCell$y.x), OffByCell$y.y, OffByCell$y.x),
PPS= OffByCell$PPS.y - OffByCell$PPS.x,
ST = OffByCell$ST.x,
cid = OffByCell$cid,
ST = OffByCell$ST.y)
#make team comparisons
Comparison <- merge(DiffOff, DiffDeff, by = "cid", all = T)
Comparison <- Comparison[,-c(6:7)]
Comparison$Diff <- c(Comparison$PPS.x + Comparison$PPS.y)
PPSAA <- weighted.mean((Comparison$PPS.x + Comparison$PPS.y), Comparison$ST.x)
return(list(PPSAA = PPSAA))
}
Offensive_teams <- as.character(unique(shotDataTotal2017$TEAM_NAME))
defenseve_names <- names(shotDatafDef2017)
df <- data.frame(matrix(ncol = 30, nrow = 30))
colnames(df) <- as.character(unique(shotDataTotal2017$TEAM_NAME))
rownames(df) <- names(shotDatafDef2017)
df
for (i in 1:2) {
for (j in 1:5){
df[rownames(df) == defenseve_names[j],colnames(df) == Offensive_teams[i]] <- ShotComparison(OffTeam = Offensive_teams[i], DefTown = defenseve_names[j], SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 30)$PPSAA
}
}
1:length(Offensive_teams)
:length(defenseve_names)
ShotComparison(OffTeam = Offensive_teams[1], DefTown = defenseve_names[1], SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 30)$PPSAA
Offensive_teams[1]
defenseve_names[1]
ShotComparison(OffTeam = NY"", DefTown = defenseve_names[1], SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 30)$PPSAA
ShotComparison(OffTeam = "NY", DefTown = defenseve_names[1], SeasondataOff = shotDataTotal2016, SeasonDataDef = shotDatafDef2016, nbins = 30)$PPSAA
for (i in 1:length(Offensive_teams)) {
for (j in 1:length(defenseve_names)){
df[rownames(df) == defenseve_names[j],colnames(df) == Offensive_teams[i]] <- ShotComparison(OffTeam = Offensive_teams[i], DefTown = defenseve_names[j], SeasondataOff = shotDataTotal2017, SeasonDataDef = shotDatafDef2017, nbins = 30)$PPSAA
}
}
df
View(df)
?sort
datos2017 <- df
write.csv(datos2017, "datos2017.csv")
class(df)
order(x <- c(1,1,3:1,1:4,3), y <- c(9,9:1), z <- c(2,1:9)))
order(x <- c(1,1,3:1,1:4,3), y <- c(9,9:1), z <- c(2,1:9))
df[order(GSW)]
df[order(df$GSW)]
View(df[order(df$GSW)])
View(df[order(df$GSW)])
order(df$GSW)
View(df[order(df$GSW),])
0.13*100
0.13964257*100
View(df[order(df$Cle),])
