shotDatafDef2017Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2017[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2017, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2017Temp)
}else if (past_games$Season[i] == 2016){
shotDatafDef2016Temp <- shotDatafDef2016
shotDatafDef2016Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2016[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2016, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2016Temp)
}else if (past_games$Season[i] == 2015){
shotDatafDef2015Temp <- shotDatafDef2015
shotDatafDef2015Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2015[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2015, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2015Temp)
}else{
past_games$defAPPS[i] <- NA
}
}
View(past_games)
dates2015 <- unique(past_games$Date)[unique(past_games$Date) >= dmy("28-10-2014") & unique(past_games$Date) <= dmy("15-04-2015")]
DF2015 <- data.frame(Season = rep(2015, times =length(dates2015)), day = rep(NA, times =length(dates2015)), defAPPS = rep(NA, times = length(dates2015)))
for(i in 10:length(dates2015)) {
shotDatafDef2015Temp <- shotDatafDef2015
DF2015$day[i] <- i
print(i)
shotDatafDef2015Temp[["Cle"]] <- dplyr::filter(shotDatafDef2015Temp[["Cle"]], GAME_DATE < dates2015[i])
DF2015[i,3] <- ComparisonPPS(OffTeam = "GSW", DefTown = "Cle", SeasondataOff = dplyr::filter(shotDataTotal2015, GAME_DATE < dates2015[i]), SeasonDataDef = shotDatafDef2015Temp)
}
DFDates <- rbind(DF2015, DF2016, DF2017)
DFDates$Season <- as.factor(DFDates$Season)
ggplot(DFDates, aes(x = day, y = defAPPS))+ geom_point(aes(color = Season)) + geom_line(aes(color = Season))
source('~/Documents/Sloan/WordPress.R')
if (!require("pacman")) install.packages("pacman")
pacman::p_load(rjson, grid, gridExtra, png, RCurl, ggplot2, jpeg, hexbin, sp, knitr, raster, rasterVis, dplyr)
#library(rjson)
#library(grid)
#library(gridExtra)
#library(png)
#library(RCurl)
#library(ggplot2)
#library(jpeg)
#library(hexbin)
#library(sp)
#library(knitr)
#library(raster)
#library(rasterVis)
#library(dplyr)
by_team <- readRDS("by_team.rds")
teamID <- by_team$team_id
teamName <- by_team$team_city
defensiveURL <- list()
shotData <- list()
shotDatafDef <- list()
shotURLtotal <- paste("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2013-14&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2013-14&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=", sep = "")
# import from JSON
shotDataTotal <- fromJSON(file = shotURLtotal, method="C")
# unlist shot data, save into a data frame
shotchartTotal2014 <- data.frame(matrix(unlist(shotDataTotal$resultSets[[1]][[3]]), ncol = 24, byrow = TRUE))
colnames(shotchartTotal2014)<- shotDataTotal$resultSets[[1]][[2]]
# covert x and y coordinates into numeric
shotchartTotal2014$LOC_X <- as.numeric(as.character(shotchartTotal2014$LOC_X))
shotchartTotal2014$LOC_Y <- as.numeric(as.character(shotchartTotal2014$LOC_Y))
shotchartTotal2014$SHOT_DISTANCE <- as.numeric(as.character(shotchartTotal2014$SHOT_DISTANCE))
shotDataTotal2014 <- shotchartTotal2014
shotDataTotal2014$TEAM_NAME <- gsub("Detroit Pistons", "Det", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Atlanta Hawks", "Atl", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Chicago Bulls", "Chi", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Boston Celtics", "Bos", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Cleveland Cavaliers", "Cle", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("New Orleans Pelicans", "NO", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Golden State Warriors", "GSW", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Orlando Magic", "ORL", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Washington Wizards", "Was", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Philadelphia 76ers", "Phi", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Brooklyn Nets", "Bkn", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Utah Jazz", "Uta", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Miami Heat", "Mia", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Charlotte Hornets", "Cha", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Toronto Raptors", "Tor", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Indiana Pacers", "Ind", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Houston Rockets", "Hou", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Denver Nuggets", "Den", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Memphis Grizzlies", "Mem", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("New York Knicks", "NY", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Milwaukee Bucks", "Mil", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Oklahoma City Thunder", "Okc", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("San Antonio Spurs", "Sas", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Dallas Mavericks", "Dal", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Phoenix Suns", "Pho", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Portland Trail Blazers", "Por", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("LA Clippers", "Lac", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Los Angeles Clippers", "Lac", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Sacramento Kings", "Sac", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Los Angeles Lakers", "Lal", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Minnesota Timberwolves", "Min", shotDataTotal2014$TEAM_NAME)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(rjson, grid, gridExtra, png, RCurl, ggplot2, jpeg, hexbin, sp, knitr, raster, rasterVis, dplyr)
#library(rjson)
#library(grid)
#library(gridExtra)
#library(png)
#library(RCurl)
#library(ggplot2)
#library(jpeg)
#library(hexbin)
#library(sp)
#library(knitr)
#library(raster)
#library(rasterVis)
#library(dplyr)
by_team <- readRDS("by_team.rds")
teamID <- by_team$team_id
teamName <- by_team$team_city
defensiveURL <- list()
shotData <- list()
shotDatafDef <- list()
shotURLtotal <- paste("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2013-14&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2013-14&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=", sep = "")
# import from JSON
shotDataTotal <- fromJSON(file = shotURLtotal, method="C")
# unlist shot data, save into a data frame
shotchartTotal2014 <- data.frame(matrix(unlist(shotDataTotal$resultSets[[1]][[3]]), ncol = 24, byrow = TRUE))
colnames(shotchartTotal2014)<- shotDataTotal$resultSets[[1]][[2]]
# covert x and y coordinates into numeric
shotchartTotal2014$LOC_X <- as.numeric(as.character(shotchartTotal2014$LOC_X))
shotchartTotal2014$LOC_Y <- as.numeric(as.character(shotchartTotal2014$LOC_Y))
shotchartTotal2014$SHOT_DISTANCE <- as.numeric(as.character(shotchartTotal2014$SHOT_DISTANCE))
shotDataTotal2014 <- shotchartTotal2014
shotDataTotal2014$TEAM_NAME <- gsub("Detroit Pistons", "Det", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Atlanta Hawks", "Atl", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Chicago Bulls", "Chi", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Boston Celtics", "Bos", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Cleveland Cavaliers", "Cle", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("New Orleans Pelicans", "NO", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Golden State Warriors", "GSW", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Orlando Magic", "ORL", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Washington Wizards", "Was", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Philadelphia 76ers", "Phi", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Brooklyn Nets", "Bkn", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Utah Jazz", "Uta", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Miami Heat", "Mia", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Charlotte Hornets", "Cha", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Toronto Raptors", "Tor", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Indiana Pacers", "Ind", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Houston Rockets", "Hou", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Denver Nuggets", "Den", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Memphis Grizzlies", "Mem", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("New York Knicks", "NY", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Milwaukee Bucks", "Mil", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Oklahoma City Thunder", "Okc", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("San Antonio Spurs", "Sas", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Dallas Mavericks", "Dal", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Phoenix Suns", "Pho", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Portland Trail Blazers", "Por", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("LA Clippers", "Lac", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Los Angeles Clippers", "Lac", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Sacramento Kings", "Sac", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Los Angeles Lakers", "Lal", shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME
unique(shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Minnesota Timberwolves", "Min", shotDataTotal2014$TEAM_NAME)
unique(shotDataTotal2014$TEAM_NAME)
shotDataTotal2014$TEAM_NAME <- gsub("Charlotte Bobcats", "Cha", shotDataTotal2014$TEAM_NAME)
saveRDS(shotDataTotal2014, 'shotDataTotal2014.rds')
shotDatafDef2014 <- shotDatafDef
####
#####Defensive end
shotDatafDef2014 <- shotDatafDef
teamID <- by_team$team_id
teamName <- by_team$team_city
defensiveURL <- list()
shotData <- list()
shotDatafDef <- list()
for (i in 1:length(teamID)){
defensiveURL[[i]] <- paste("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2013-14&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=", by_team$team_id[i],"&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2013-14&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=", sep = "")
# import from JSON
shotData[[i]] <- fromJSON(file = defensiveURL[[i]], method="C")
shotDatafDef[[i]] <- data.frame(matrix(unlist(shotData[[i]]$resultSets[[1]][[3]]), ncol = 24, byrow = TRUE))
colnames(shotDatafDef[[i]]) <-  shotData[[i]]$resultSets[[1]][[2]]
#####################
# covert x and y coordinates into numeric
shotDatafDef[[i]]$LOC_X <- as.numeric(as.character(shotDatafDef[[i]]$LOC_X))
shotDatafDef[[i]]$LOC_Y <- as.numeric(as.character(shotDatafDef[[i]]$LOC_Y))
shotDatafDef[[i]]$SHOT_DISTANCE <- as.numeric(as.character(shotDatafDef[[i]]$SHOT_DISTANCE))
}
names(shotDatafDef)
teamName
shotDatafDef2014[[30]]
shotDatafDef2014[[29]]
shotDatafDef2014[[1]]
shotDatafDef2014 <- shotDatafDef
shotDatafDef2014[[30]]
shotDatafDef2014[[30]]$TEAM_NAME
unique(shotDatafDef2014[[30]]$TEAM_NAME)
unique(shotDatafDef2014[[30]]$HTM)
unique(shotDatafDef2014[[30]]$HTM)
summary(shotDatafDef2014[[30]]$HTM)
summary(shotDatafDef2014[[30]]$VTM)
names(shotDatafDef2014) <- c("Atl", "Bos", "Cle", "NO", "Chi", "Dal", "Den", "GSW", "Hou", "Lac", "Lal", "Mia", "Mil", "Min", "Bkn", "NY", "ORL", "Ind", "Phi", "Pho", "Por", "Sac", "Sas", "Okc", "Tor", "Uta", "Mem", "Was", "Det", "Cha")
shotDataTotal2014<- readRDS("shotDataTotal2014.rds")
shotDataTotal2014$GAME_DATE <- lubridate::ymd(shotDataTotal2014$GAME_DATE)
saveRDS(shotDataTotal2014, "shotDataTotal2014.rds")
shotDatafDef2014 <- readRDS("shotDatafDef2014.rds")
for (i in 1:length(names(shotDatafDef2014))) {
shotDatafDef2014[[i]]$GAME_DATE <- lubridate::ymd(shotDatafDef2014[[i]]$GAME_DATE)
}
saveRDS(shotDatafDef2014, "shotDatafDef2014.rds")
shotDatafDef2014[[1]]$GAME_DATE
colnames(shotDatafDef2014[[1]])
shotDatafDef2014 <- shotDatafDef
teamID <- by_team$team_id
teamName <- by_team$team_city
defensiveURL <- list()
shotData <- list()
shotDatafDef <- list()
for (i in 1:length(teamID)){
defensiveURL[[i]] <- paste("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2013-14&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=", by_team$team_id[i],"&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2013-14&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=", sep = "")
# import from JSON
shotData[[i]] <- fromJSON(file = defensiveURL[[i]], method="C")
shotDatafDef[[i]] <- data.frame(matrix(unlist(shotData[[i]]$resultSets[[1]][[3]]), ncol = 24, byrow = TRUE))
colnames(shotDatafDef[[i]]) <-  shotData[[i]]$resultSets[[1]][[2]]
#####################
# covert x and y coordinates into numeric
shotDatafDef[[i]]$LOC_X <- as.numeric(as.character(shotDatafDef[[i]]$LOC_X))
shotDatafDef[[i]]$LOC_Y <- as.numeric(as.character(shotDatafDef[[i]]$LOC_Y))
shotDatafDef[[i]]$SHOT_DISTANCE <- as.numeric(as.character(shotDatafDef[[i]]$SHOT_DISTANCE))
}
names(shotDatafDef) <- teamName
shotDatafDef2014 <- shotDatafDef
names(shotDatafDef2014) <- c("Atl", "Bos", "Cle", "NO", "Chi", "Dal", "Den", "GSW", "Hou", "Lac", "Lal", "Mia", "Mil", "Min", "Bkn", "NY", "ORL", "Ind", "Phi", "Pho", "Por", "Sac", "Sas", "Okc", "Tor", "Uta", "Mem", "Was", "Det", "Cha")
saveRDS(shotDatafDef2014, 'shotDatafDef2014.rds')
shotDataTotal2014<- readRDS("shotDataTotal2014.rds")
shotDataTotal2014$GAME_DATE <- lubridate::ymd(shotDataTotal2014$GAME_DATE)
saveRDS(shotDataTotal2014, "shotDataTotal2014.rds")
shotDatafDef2014 <- readRDS("shotDatafDef2014.rds")
for (i in 1:length(names(shotDatafDef2014))) {
shotDatafDef2014[[i]]$GAME_DATE <- lubridate::ymd(shotDatafDef2014[[i]]$GAME_DATE)
}
saveRDS(shotDatafDef2014, "shotDatafDef2014.rds")
for(i in 1:NROW(past_games)) {
if (past_games$Season[i] == 2017) {
shotDatafDef2017Temp <- shotDatafDef2017
shotDatafDef2017Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2017[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2017, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2017Temp)
}else if (past_games$Season[i] == 2016){
shotDatafDef2016Temp <- shotDatafDef2016
shotDatafDef2016Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2016[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2016, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2016Temp)
}else if (past_games$Season[i] == 2015){
shotDatafDef2015Temp <- shotDatafDef2015
shotDatafDef2015Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2015[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2015, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2015Temp)
}else if (past_games$Season[i] == 2014){
shotDatafDef2014Temp <- shotDatafDef2014
shotDatafDef2014Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2014[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2014, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2014Temp)
}else{
past_games$defAPPS[i] <- NA
}
}
unique(past_games$Home)
pacman::p_load(XML, lubridate)
#Gather data
## Year 2012
Months <- c("october", "november", "december", "january", "february", "march", "april")
Years <- c(2013, 2014, 2015, 2016, 2017)
URLs <- list()
for(i in 1:length(Years)){
URLs[[i]] <- paste("http://www.basketball-reference.com/leagues/NBA_", Years[i],"_games-", Months,".html", sep = "")
}
URLs <- do.call("c", URLs)
URLs <- data.frame(URLs = URLs, Year = as.numeric(gsub("\\D", "", URLs)))
URLs$URLs <- as.character(URLs$URLs)
schedule <- list()
# import from JSON
for(i in 1:nrow(URLs)){
schedule[[i]] <- readHTMLTable(URLs$URLs[i])
schedule[[i]] <- schedule[[i]]$schedule
}
schedule <- do.call("rbind", schedule)
schedule$Date <- mdy(as.character(schedule$Date))
schedule[,4] <- as.numeric(as.character(schedule[,4]))
schedule[,6] <- as.numeric(as.character(schedule[,6]))
###Set dates by season
season2013 <- data.frame(Season = c(2013), Start_date_reg = dmy(c("30-10-2012")), End_date_reg = dmy(c("17-04-2013")), Start_date_playoff = dmy(c("20-04-2013")), End_date_playoff = dmy(c("20-06-2013")))
season2014 <- data.frame(Season = c(2014), Start_date_reg = dmy(c("29-10-2013")), End_date_reg = dmy(c("16-04-2014")), Start_date_playoff = dmy(c("19-04-2014")), End_date_playoff = dmy(c("15-06-2014")))
season2015 <- data.frame(Season = c(2015), Start_date_reg = dmy(c("28-10-2014")), End_date_reg = dmy(c("15-04-2015")), Start_date_playoff = dmy(c("18-04-2015")), End_date_playoff = dmy(c("16-06-2015")))
season2016 <- data.frame(Season = c(2016), Start_date_reg = dmy(c("27-10-2015")), End_date_reg = dmy(c("13-04-2016")), Start_date_playoff = dmy(c("16-04-2016")), End_date_playoff = dmy(c("19-06-2016")))
season2017 <- data.frame(Season = c(2017), Start_date_reg = dmy(c("25-10-2016")), End_date_reg = dmy(c("12-04-2017")), Start_date_playoff = dmy(c("15-04-2017")), End_date_playoff = dmy(c("18-06-2017")))
seasons <- list(season2013, season2014, season2015, season2016, season2017)
####Asign seasons
schedule$Season <- NA
for(i in 1:length(seasons)){
schedule$Season <- ifelse(schedule$Date >= seasons[[i]]$Start_date_reg & schedule$Date <= seasons[[i]]$End_date_playoff, seasons[[i]]$Season, schedule$Season)
}
schedule[,3] <- gsub("Detroit Pistons", "Det", schedule[,3])
schedule[,3] <- gsub("Atlanta Hawks", "Atl", schedule[,3])
schedule[,3] <- gsub("Chicago Bulls", "Chi", schedule[,3])
schedule[,3] <- gsub("Boston Celtics", "Bos", schedule[,3])
schedule[,3] <- gsub("Cleveland Cavaliers", "Cle", schedule[,3])
schedule[,3] <- gsub("New Orleans Pelicans", "NO", schedule[,3])
schedule[,3] <- gsub("Golden State Warriors", "GSW", schedule[,3])
schedule[,3] <- gsub("Orlando Magic", "ORL", schedule[,3])
schedule[,3] <- gsub("Washington Wizards", "Was", schedule[,3])
schedule[,3] <- gsub("Philadelphia 76ers", "Phi", schedule[,3])
schedule[,3] <- gsub("Brooklyn Nets", "Bkn", schedule[,3])
schedule[,3] <- gsub("Utah Jazz", "Uta", schedule[,3])
schedule[,3] <- gsub("Miami Heat", "Mia", schedule[,3])
schedule[,3] <- gsub("Charlotte Hornets", "Cha", schedule[,3])
schedule[,3] <- gsub("Toronto Raptors", "Tor", schedule[,3])
schedule[,3] <- gsub("Indiana Pacers", "Ind", schedule[,3])
schedule[,3] <- gsub("Houston Rockets", "Hou", schedule[,3])
schedule[,3] <- gsub("Denver Nuggets", "Den", schedule[,3])
schedule[,3] <- gsub("Memphis Grizzlies", "Mem", schedule[,3])
schedule[,3] <- gsub("New York Knicks", "NY", schedule[,3])
schedule[,3] <- gsub("Milwaukee Bucks", "Mil", schedule[,3])
schedule[,3] <- gsub("Oklahoma City Thunder", "Okc", schedule[,3])
schedule[,3] <- gsub("San Antonio Spurs", "Sas", schedule[,3])
schedule[,3] <- gsub("Dallas Mavericks", "Dal", schedule[,3])
schedule[,3] <- gsub("Phoenix Suns", "Pho", schedule[,3])
schedule[,3] <- gsub("Portland Trail Blazers", "Por", schedule[,3])
schedule[,3] <- gsub("Los Angeles Clippers", "Lac", schedule[,3])
schedule[,3] <- gsub("Sacramento Kings", "Sac", schedule[,3])
schedule[,3] <- gsub("Los Angeles Lakers", "Lal", schedule[,3])
schedule[,3] <- gsub("Minnesota Timberwolves", "Min", schedule[,3])
schedule[,5] <- gsub("Detroit Pistons", "Det", schedule[,5])
schedule[,5] <- gsub("Atlanta Hawks", "Atl", schedule[,5])
schedule[,5] <- gsub("Chicago Bulls", "Chi", schedule[,5])
schedule[,5] <- gsub("Boston Celtics", "Bos", schedule[,5])
schedule[,5] <- gsub("Cleveland Cavaliers", "Cle", schedule[,5])
schedule[,5] <- gsub("New Orleans Pelicans", "NO", schedule[,5])
schedule[,5] <- gsub("Golden State Warriors", "GSW", schedule[,5])
schedule[,5] <- gsub("Orlando Magic", "ORL", schedule[,5])
schedule[,5] <- gsub("Washington Wizards", "Was", schedule[,5])
schedule[,5] <- gsub("Philadelphia 76ers", "Phi", schedule[,5])
schedule[,5] <- gsub("Brooklyn Nets", "Bkn", schedule[,5])
schedule[,5] <- gsub("Utah Jazz", "Uta", schedule[,5])
schedule[,5] <- gsub("Miami Heat", "Mia", schedule[,5])
schedule[,5] <- gsub("Charlotte Hornets", "Cha", schedule[,5])
schedule[,5] <- gsub("Toronto Raptors", "Tor", schedule[,5])
schedule[,5] <- gsub("Indiana Pacers", "Ind", schedule[,5])
schedule[,5] <- gsub("Houston Rockets", "Hou", schedule[,5])
schedule[,5] <- gsub("Denver Nuggets", "Den", schedule[,5])
schedule[,5] <- gsub("Memphis Grizzlies", "Mem", schedule[,5])
schedule[,5] <- gsub("New York Knicks", "NY", schedule[,5])
schedule[,5] <- gsub("Milwaukee Bucks", "Mil", schedule[,5])
schedule[,5] <- gsub("Oklahoma City Thunder", "Okc", schedule[,5])
schedule[,5] <- gsub("San Antonio Spurs", "Sas", schedule[,5])
schedule[,5] <- gsub("Dallas Mavericks", "Dal", schedule[,5])
schedule[,5] <- gsub("Phoenix Suns", "Pho", schedule[,5])
schedule[,5] <- gsub("Portland Trail Blazers", "Por", schedule[,5])
schedule[,5] <- gsub("Los Angeles Clippers", "Lac", schedule[,5])
schedule[,5] <- gsub("Sacramento Kings", "Sac", schedule[,5])
schedule[,5] <- gsub("Los Angeles Lakers", "Lal", schedule[,5])
schedule[,5] <- gsub("Minnesota Timberwolves", "Min", schedule[,5])
schedule[,5] <- gsub("Charlotte Bobcats", "Cha", schedule[,5])
###seasons dates
past_games <- schedule[schedule$Date < Sys.Date(),]
past_games$defAPPS <- NA
past_games$offAPPS <- NA
past_games$HomeRes <- NA
past_games <- past_games[,c(1,3,4,5,6,10,11,12,13)]
colnames(past_games) <- c("Date", "Visitor", "Visit_PTS", "Home", "Home_PTS", "Season", "defAPPS", "offAPPS", "HomeRes")
past_games$HomeRes <- past_games$Visit_PTS - past_games$Home_PTS
past_games <- past_games[!is.na(past_games$Date),]
#######load data and functions, not needed in the real one
shotDataTotal2017<- readRDS("shotDataTotal2017.rds")
shotDatafDef2017 <- readRDS("shotDatafDef2017.rds")
#####2016
shotDataTotal2016<- readRDS("shotDataTotal2016.rds")
shotDatafDef2016 <- readRDS("shotDatafDef2016.rds")
#####2015
shotDataTotal2015<- readRDS("shotDataTotal2015.rds")
shotDatafDef2015 <- readRDS("shotDatafDef2015.rds")
####2014
shotDataTotal2014<- readRDS("shotDataTotal2014.rds")
shotDataTotal2014$GAME_DATE <- lubridate::ymd(shotDataTotal2014$GAME_DATE)
saveRDS(shotDataTotal2014, "shotDataTotal2014.rds")
shotDatafDef2014 <- readRDS("shotDatafDef2014.rds")
for (i in 1:length(names(shotDatafDef2014))) {
shotDatafDef2014[[i]]$GAME_DATE <- lubridate::ymd(shotDatafDef2014[[i]]$GAME_DATE)
}
saveRDS(shotDatafDef2014, "shotDatafDef2014.rds")
pacman::p_load(rjson, grid, gridExtra, png, RCurl, ggplot2, jpeg, hexbin, sp, knitr, raster, rasterVis, dplyr)
ComparisonPPS <- function(OffTeam, DefTown, SeasondataOff, SeasonDataDef, nbins = 40) {
#Filter the offensive data of the Offensive Team
Off <- filter(SeasondataOff, TEAM_NAME == OffTeam)
#Filter the Deffensive data of the Defensive team
deff <- SeasonDataDef[names(SeasonDataDef) == DefTown][[1]]
#Get the maximum and minumum values for x and y
xbnds <- range(c(SeasondataOff$LOC_X, deff$LOC_X))
ybnds <- range(c(SeasondataOff$LOC_Y, deff$LOC_Y))
#Make hexbin dataframes out of the teams
makeHexData <- function(df) {
h <- hexbin(df$LOC_X, df$LOC_Y, nbins, xbnds = xbnds, ybnds = ybnds, IDs = TRUE)
data.frame(hcell2xy(h),
PPS = tapply(as.numeric(as.character(df$SHOT_MADE_FLAG))*ifelse(tolower(df$SHOT_TYPE) == "3pt field goal", 3, 2), h@cID, FUN = function(z) sum(z)/length(z)),
ST = tapply(df$SHOT_MADE_FLAG, h@cID, FUN = function(z) length(z)),
cid = h@cell)
}
##Total NBA data
Totalhex <- makeHexData(SeasondataOff)
##Defensive team data
Defhex <- makeHexData(deff)
##Offensive team data
Offhex <- makeHexData(Off)
#Merge offensive and deffensive data with total data by Cell id
DeffbyCell <- merge(Totalhex, Defhex, by = "cid", all = T)
OffByCell <- merge(Totalhex, Offhex, by = "cid", all = T)
##  when calculating the difference empty cells should count as 0
DeffbyCell$PPS.x[is.na(DeffbyCell$PPS.x)] <- 0
DeffbyCell$PPS.y[is.na(DeffbyCell$PPS.y)] <- 0
DeffbyCell$ST.y[is.na(DeffbyCell$ST.y)] <- 0
OffByCell$PPS.x[is.na(OffByCell$PPS.x)] <- 0
OffByCell$PPS.y[is.na(OffByCell$PPS.y)] <- 0
OffByCell$ST.y[is.na(OffByCell$ST.y)] <- 0
#  make a "difference" data.frame
DiffDeff <- data.frame(x = ifelse(is.na(DeffbyCell$x.x), DeffbyCell$x.y, DeffbyCell$x.x),
y = ifelse(is.na(DeffbyCell$y.x), DeffbyCell$y.y, DeffbyCell$y.x),
PPS= DeffbyCell$PPS.y - DeffbyCell$PPS.x,
cid= DeffbyCell$cid,
ST = DeffbyCell$ST.y)
DiffOff <- data.frame(x = ifelse(is.na(OffByCell$x.x), OffByCell$x.y, OffByCell$x.x),
y = ifelse(is.na(OffByCell$y.x), OffByCell$y.y, OffByCell$y.x),
PPS= OffByCell$PPS.y - OffByCell$PPS.x,
ST = OffByCell$ST.x,
cid = OffByCell$cid,
ST = OffByCell$ST.y)
#make team comparisons
Comparison <- merge(DiffOff, DiffDeff, by = "cid", all = T)
Comparison <- Comparison[,-c(6:7)]
Comparison$Diff <- c(Comparison$PPS.x + Comparison$PPS.y)
PPSAA <- weighted.mean((Comparison$PPS.x + Comparison$PPS.y), Comparison$ST.x, na.rm = TRUE)
return(list(PPSAA = PPSAA))
}
#######
for(i in 1:NROW(past_games)) {
if (past_games$Season[i] == 2017) {
shotDatafDef2017Temp <- shotDatafDef2017
shotDatafDef2017Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2017[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2017, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2017Temp)
}else if (past_games$Season[i] == 2016){
shotDatafDef2016Temp <- shotDatafDef2016
shotDatafDef2016Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2016[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2016, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2016Temp)
}else if (past_games$Season[i] == 2015){
shotDatafDef2015Temp <- shotDatafDef2015
shotDatafDef2015Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2015[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2015, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2015Temp)
}else if (past_games$Season[i] == 2014){
shotDatafDef2014Temp <- shotDatafDef2014
shotDatafDef2014Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2014[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2014, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2014Temp)
}else{
past_games$defAPPS[i] <- NA
}
}
dates2014 <- unique(past_games$Date)[unique(past_games$Date) >= dmy("28-10-2014") & unique(past_games$Date) <= dmy("15-04-2015")]
DF2014 <- data.frame(Season = rep(2014, times =length(dates2014)), day = rep(NA, times =length(dates2014)), defAPPS = rep(NA, times = length(dates2014)))
for(i in 10:length(dates2014)) {
shotDatafDef2014Temp <- shotDatafDef2014
DF2014$day[i] <- i
print(i)
shotDatafDef2014Temp[["Cle"]] <- dplyr::filter(shotDatafDef2014Temp[["Cle"]], GAME_DATE < dates2014[i])
DF2014[i,3] <- ComparisonPPS(OffTeam = "GSW", DefTown = "Cle", SeasondataOff = dplyr::filter(shotDataTotal2014, GAME_DATE < dates2014[i]), SeasonDataDef = shotDatafDef2014Temp)
}
DFDates <- rbind(DF2014, DF2015, DF2016, DF2017)
DFDates$Season <- as.factor(DFDates$Season)
ggplot(DFDates, aes(x = day, y = defAPPS))+ geom_point(aes(color = Season)) + geom_line(aes(color = Season))
ggplot(DF2014, aes(x = day, y = defAPPS))+ geom_point() + geom_line()
ComparisonPPS(OffTeam = "GSW", DefTown = "Cle", SeasondataOff = dplyr::filter(shotDataTotal2014, GAME_DATE < dates2014[i]), SeasonDataDef = shotDatafDef2014Temp)
View(DFDates)
View(past_games)
for(i in 1:NROW(past_games)) {
if (past_games$Season[i] == 2017) {
shotDatafDef2017Temp <- shotDatafDef2017
shotDatafDef2017Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2017[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2017, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2017Temp)
}else if (past_games$Season[i] == 2016){
shotDatafDef2016Temp <- shotDatafDef2016
shotDatafDef2016Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2016[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2016, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2016Temp)
}else if (past_games$Season[i] == 2015){
shotDatafDef2015Temp <- shotDatafDef2015
shotDatafDef2015Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2015[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2015, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2015Temp)
}else if (past_games$Season[i] == 2014){
shotDatafDef2014Temp <- shotDatafDef2014
shotDatafDef2014Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2014[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2014, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2014Temp)
}else{
past_games$defAPPS[i] <- NA
}
}
for(i in 1:NROW(past_games)) {
if (past_games$Season[i] == 2017) {
shotDatafDef2017Temp <- shotDatafDef2017
shotDatafDef2017Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2017[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2017, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2017Temp)
}else if (past_games$Season[i] == 2016){
shotDatafDef2016Temp <- shotDatafDef2016
shotDatafDef2016Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2016[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2016, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2016Temp)
}else if (past_games$Season[i] == 2015){
shotDatafDef2015Temp <- shotDatafDef2015
shotDatafDef2015Temp[[past_games$Home[i]]] <- dplyr::filter(shotDatafDef2015[[past_games$Home[i]]], GAME_DATE < past_games$Date[i])
past_games$defAPPS[i] <- ComparisonPPS(OffTeam = past_games$Home[i], DefTown = past_games$Visitor[i], SeasondataOff = dplyr::filter(shotDataTotal2015, GAME_DATE < past_games$Date[i]), SeasonDataDef = shotDatafDef2015Temp)
}else{
past_games$defAPPS[i] <- NA
}
}
View(past_games)
DFDates <- rbind(DF2015, DF2016, DF2017)
DFDates$Season <- as.factor(DFDates$Season)
ggplot(DFDates, aes(x = day, y = defAPPS))+ geom_point(aes(color = Season)) + geom_line(aes(color = Season))
saveRDS(past_games, "past_games.rds")
saveRDS(DFDates, "DFDates.rds")
